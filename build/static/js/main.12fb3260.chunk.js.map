{"version":3,"sources":["model.js","logo.svg","viewer.js","gui.js","main.js","guiBend.js","reportWebVitals.js","index.js"],"names":["Vertex","pos","fixed","pos0","vel","force","this","vs","es","fs","id","all","length","push","Edge","lMax","maxContraction","edgeChannel","edgeActive","l","iv","Model","viewer","controls","forceUpdate","sharedData","configure","reset","loadData","resetSelection","recordV","v","e","v0","c","a0","fixedVs","script","f","vStatus","eStatus","fStatus","iAction","iActionPrev","numSteps","timeStart","Date","editing","simulate","record","gravity","directional","euler","thre","v_frames","numChannels","defaultNumChannels","numActions","defaultNumActions","inflateChannel","Array","fill","contractionPercent","data","console","log","from","p","i","Math","sqrt","updateCorners","precompute","initCheck","x","y","z","slice","actions","clone","prevData","same","JSON","stringify","saveData","iHistory","sameData","history","shift","sim","grav","loadDict","applyHistory","zOffset","bbox","vv","copy","copyArrays","oldValue","newValue","min","distanceTo","maxMaxContraction","defaultMaxLength","map","_","iChannel","updateDataStructure","e0","e1","getAngle","alpha","ids","iO","iA","iB","vec0","sub","vec1","angleTo","abs","angleThreshold","vec","l0","lMin","k","normalize","multiplyScalar","add","negate","gravityFactor","numStepsAction","floor","n","scripting","recordFrames","iStep","runScript","contractionPercentRate","update","movingJoint","movingBody","h","directionalFriction","frictionFactor","dampingRatio","pow","ceil","angleCheckFrequency","iJoint","defaultMinLength","iJoints","j","notExist","includes","ij0","ij1","ij2","v1","v2","n_connecting_edges","es_connecting_3j","n_connected_js","added","assert","vs_connected","nv_connected_3j","iv_mirror","parseInt","nv","vm","vn","vec01","vec12","subVectors","normal","cross","dot","dist","displacement","e2","ees","ee","filter","reindexObjects","updateFromDataStructure","v_frame","center","divideScalar","cent","centroid","xMax","yMax","zMax","xMin","yMin","zMin","max","ivs","centFront","rotRadZ","atan2","PI","rotateTo","t","getTime","Infinity","alert","eulerInverse","setFromVector3","setFromEuler","applyEuler","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","json","parse","contractionInterval","contractionLevels","round","Boolean","numStepsActionMultiplier","angleCheckFrequencyMultiplier","setting","responseText","send","readTextFile","indices","vs0","vs1","error","O","A","B","cls","cWhite","THREE","cChannels","cFloor","cBlack","cSelected","cHovered","cFixed","cPassive","dTube","dJoint","viewChannel","Ball","d","model","handleClick","handlePointerOver","handlePointerOut","setOControls","translating","mesh","useRef","material","transControls","useState","drag","useFrame","state","current","color","position","object","useEffect","callbackDraggingChanged","value","window","tran","addEventListener","removeEventListener","TransformControls","ref","enabled","showX","showY","showZ","mode","space","castShadow","scale","onClick","onPointerOver","onPointerOut","args","Joint","setTranslating","sate","selected","hovered","removingJoint","removeJoint","addingJoint","addJoint","updateGUI","stopPropagation","Cylinder","opacity","transparent","axis","quaternion","setFromUnitVectors","setFromQuaternion","rotation","Beam","ie","vecPiston","vecTube","vecConstraint","vOut0","vOut1","vIn0","vIn1","vTube00","vTube01","vTube11","vTube10","vConstraint0","vConstraint1","cOut","cIn","cJoint","cBeam","cInner","changeColor","showChannel","showInfo","infoPanel","style","display","left","String","clientX","top","clientY","firstChild","removeChild","appendChild","ownerDocument","createTextNode","createElement","transpacency","cylinders","PneuMesh","React","clock","timeUntilNextFrame","getDelta","setTimeout","ready","invalidate","step","joints","beams","entries","DLight","light","set","target","shadow","mapSize","width","height","camera","right","bottom","fps","Controls","oControls","useThree","domElement","gl","OrbitControls","enableDamping","Viewer","useReducer","updateModel","recordHistory","shadowMap","concurrent","onCreated","setClearColor","setPixelRatio","devicePixelRatio","type","fov","up","antialias","intensity","receiveShadow","visible","side","s","cBackground","cTransparent","cHighlight","paddingBlocks","marginSlider","useStyles","makeStyles","theme","mainGUI","background","minHeight","editingGUI","scriptGUI","editingScriptGUI","help","cursor","alignContent","examples","SettingActive","icons","keys","every","Grid","item","textAlign","IconButton","size","WbSunny","FiberManualRecord","ListItem","ListItemText","container","SettingChannel","checked","RadioButtonChecked","RadioButtonUnchecked","styles","Examples","setHovered","border","focus","xs","alignItems","ExitToApp","Help","padding","HelpOutline","TemporalControl","classes","widthBlocks","Block","isOn","className","scriptBlock","margin","Row","blocks","spacing","rows","GUI","options","GUIHovered","List","button","download","document","body","href","encodeURIComponent","click","ListItemIcon","GetApp","input","getElementById","onchange","reader","FileReader","onload","event","inputFileString","result","readAsText","files","Publish","Divider","editingScript","ChevronLeft","Palette","Switch","onChange","Typography","Slider","disabled","defaultValue","valueLabelDisplay","val","onPointerUp","Lock","LockOpen","ArrowDownward","Computer","resetRecording","Visibility","AddCircleOutline","addEdges","Link","addTet","ChangeHistory","HighlightOff","removeEdge","OpenWith","onMouseDown","onMouseUp","FilterCenterFocus","paddingTop","paddingBottom","widthSliders","fontSize","queryString","location","search","urlParser","URLSearchParams","initFileDir","get","unSelect","b","code","metaKey","ctrlKey","shiftKey","undo","redo","fetch","then","r","text","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.12fb3260.chunk.js","sourcesContent":["import * as thre from 'three';\nimport React, {useRef, useState, useMemo} from 'react'\n\nclass Vertex {\n  static all = [];\n\n  constructor(pos, fixed, pos0, vel, force) {\n    this.pos = pos;     // thre.Vector3\n    this.fixed = fixed;\n    this.pos0 = pos0;\n    this.vel = vel;\n    this.force =force;\n    this.vs =[];  // neighbor vertices\n    this.es = [];   // neighbor edges\n    this.fs = [];   // incident faces\n\n    this.id = Vertex.all.length;\n    Vertex.all.push(this);\n  }\n}\n\nclass Edge {\n  static all = [];\n\n  constructor(vs, lMax, maxContraction, edgeChannel, edgeActive, l) {\n    this.vs = [];\n    this.lMax = lMax;\n    this.maxContraction = maxContraction;\n    this.edgeChannel = edgeChannel;\n    this.edgeActive = edgeActive;\n    this.l = l;\n\n    for (let iv of vs) {\n      this.vs.push(Vertex.all[iv]);\n    }\n    Vertex.all[vs[0]].vs.push(Vertex.all[vs[1]]);\n    Vertex.all[vs[1]].vs.push(Vertex.all[vs[0]]);\n    Vertex.all[vs[0]].es.push(this);\n    Vertex.all[vs[1]].es.push(this);\n\n    this.id = Edge.all.length;\n    Edge.all.push(this);\n  }\n\n}\n\nclass Model {\n  static history = [];\n  static iHistory = -1;\n\n  static configure() {\n    let setting = (json) => {\n      let data = JSON.parse(json);\n      Model.k = data.k;\n      Model.h = data.h;\n      Model.dampingRatio = data.dampingRatio;\n      Model.contractionInterval = data.contractionInterval;\n      Model.contractionLevels = data.contractionLevels;\n      Model.maxMaxContraction = Math.round(Model.contractionInterval * (Model.contractionLevels - 1) * 100) /100;\n      Model.contractionPercentRate = data.contractionPercentRate;\n      Model.gravityFactor = data.gravityFactor;\n      Model.gravity = Boolean(data.gravity);\n      Model.defaultMinLength = data.defaultMinLength;\n      Model.defaultMaxLength = Model.defaultMinLength / (1 - Model.maxMaxContraction);\n      Model.frictionFactor = data.frictionFactor;\n      Model.directionalFriction = data.directionalFriction;\n      Model.numStepsAction = data.numStepsActionMultiplier / Model.h;\n      Model.defaultNumActions = data.defaultNumActions;\n      Model.defaultNumChannels = data.defaultNumChannels;\n      Model.angleThreshold = data.angleThreshold;\n      Model.angleCheckFrequency = Model.numStepsAction * data.angleCheckFrequencyMultiplier;  // every # steps check angle thresholds\n    }\n\n    function readTextFile(file)\n    {\n      let rawFile = new XMLHttpRequest();\n      rawFile.open(\"GET\", file, false);\n      rawFile.onreadystatechange = function ()\n      {\n        if(rawFile.readyState === 4)\n        {\n          if(rawFile.status === 200 || rawFile.status === 0)\n          {\n            let allText = rawFile.responseText;\n            setting(allText);\n          }\n        }\n      }\n      rawFile.send(null);\n    }\n\n    readTextFile(\"config.json\")\n  }\n\n  constructor() {\n    this.viewer = null;\n\n    this.Vertex = Vertex;\n    this.Edge = Edge;\n    this.Model = Model;\n    this.controls = null;\n    this.forceUpdate = null;\n    this.sharedData = null;\n\n    Model.configure();\n    this.reset();\n\n    this.loadData();\n    this.resetSelection();\n    this.recordV();\n  }\n\n  reset() {\n    // input data\n    this.v = [];  // vertex positions: nV x 3\n    this.e = [];  // edge positions: nE x 2\n    this.v0 = [];\n    this.c = [];  // instances of v of corners: nC x 3, e.g. <AOB -> [iO, iA, iB]\n    this.a0 = [];   // corner angles: nC\n    this.fixedVs = [];  // id of vertices that are fixed\n    this.lMax = []; // maximum length\n    this.edgeActive = [];  // if beam is active: nE\n    this.edgeChannel = [];  // id of beam edgeChannel: nE\n    this.script = [];    // nTimeSteps x nChannels\n\n    // update at every step\n    this.maxContraction = [];  // percentage of maxMaxContraction: nE\n    this.vel = [];  // vertex velocities: nV x 3\n    this.f = [];  // vertex forces: nV x 3\n    this.l = [];    // current length of beams: nE\n\n    // interface\n    this.vStatus = [];    // 0: none, 1: hovered; 2: selected\n    this.eStatus = [];    // 0: none, 1: hovered; 2: selected\n    this.fStatus = [];    // 0: none, 1: hovered; 2: selected\n\n    // statistics\n    this.iAction = 0;\n    this.iActionPrev = 0;\n    this.numSteps = 0;\n    this.timeStart = new Date();\n\n    // status\n    this.editing = false;\n    this.simulate = true;\n    this.record = false;\n    Model.gravity = true;\n    this.directional = false;\n    this.euler = new thre.Euler(0, 0, 0);\n\n    this.v_frames = [];   // vertices of each frame when this.recording is True\n\n    // channel status\n    this.numChannels = Model.defaultNumChannels;\n    this.numActions = Model.defaultNumActions;\n    this.inflateChannel = new Array(this.numChannels).fill(false);\n    this.contractionPercent = new Array(this.numChannels).fill(1);  // contraction percentage of each channel, 0-1\n  }\n\n  loadDict(data) {\n    console.log(data);\n    // load a dictionary\n    let v = [];\n    let e = Array.from(data.e);\n    let f = [];\n    let p = [];\n    // f = Array.from(data.f);\n    // p = Array.from(data.p);\n    for (let i=0; i<data.v.length; i++) {\n      v.push(new thre.Vector3(data.v[i][0], data.v[i][1], data.v[i][2]));\n    }\n    this.reset();\n    let lMax, maxContraction, fixedVs, edgeChannel, edgeActive, script\n    if (data.lMax) { lMax = data.lMax;}\n    if (data.maxContraction) {maxContraction = data.maxContraction;}\n    if (data.fixedVs)  {fixedVs = data.fixedVs;}\n    if (data.edgeChannel)  edgeChannel = data.edgeChannel;\n    if (data.edgeActive)  edgeActive = data.edgeActive;\n    if (data.script) script = data.script;\n    if (data.numChannels) this.numChannels = data.numChannels;\n    if (data.numActions) this.numActions = data.numActions;\n    this.loadData(v, e, f, p, lMax, maxContraction, fixedVs, edgeChannel, edgeActive, script);\n\n    if (!(data.lMax || data.maxContraction || data.fixedVs)) {\n      this.loadData(v, e, f, p);\n    }\n  }\n\n  loadData(v, e, f, p, lMax=null, maxContraction=null, fixedVs=null, edgeChannel=null, edgeActive=null, script=[]){\n    if (v && e) {\n      this.v = v;\n      this.e = e;\n    }\n    else{\n      this.v.push(new thre.Vector3(1, -1/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(0, 2/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(-1, -1/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(0, 0, 4/Math.sqrt(6) + 0.2));\n\n      this.e.push([0, 1]);\n      this.e.push([1, 2]);\n      this.e.push([2, 0]);\n      this.e.push([0, 3]);\n      this.e.push([1, 3]);\n      this.e.push([2, 3]);\n    }\n\n    if (fixedVs) this.fixedVs = fixedVs;\n    if (lMax) this.lMax = lMax;\n    if (maxContraction) this.maxContraction = maxContraction;\n    if (edgeActive) this.edgeActive = edgeActive;\n    if (edgeChannel) this.edgeChannel = edgeChannel;\n    if (script) this.script = script;\n\n    this.updateCorners();\n    this.precompute();\n\n    this.initCheck();\n    this.resetSelection();\n    this.recordV();\n  }\n\n  saveData() {\n    let data = {};\n    data.v = [];\n    for (let v of this.v) {\n      data.v.push([v.x, v.y, v.z]);\n    }\n    data.v0 = [];\n    for (let v0 of this.v0) {\n      data.v0.push([v0.x, v0.y, v0.z]);\n    }\n\n    data.e = [];\n    for (let i=0; i<this.e.length; i++) {\n      data.e.push(this.e[i].slice());\n    }\n    data.fixedVs = this.fixedVs.slice();\n    data.lMax = this.lMax.slice();\n    data.edgeChannel = this.edgeChannel.slice();\n    data.edgeActive = this.edgeActive.slice();\n    data.script = [];\n    for (let i=0; i<this.script.length; i++) {\n      const actions = this.script[i].slice();\n      data.script.push(actions);\n    }\n\n    data.maxContraction = this.maxContraction.slice();\n    data.vStatus = this.vStatus.slice();\n    data.eStatus = this.eStatus.slice();\n    data.fStatus = this.fStatus.slice();\n\n    data.euler = this.euler.clone();\n\n    data.numChannels = this.numChannels;\n    data.numActions = this.numActions;\n    data.inflateChannel = this.inflateChannel.slice();\n    data.contractionPercent = this.contractionPercent.slice();\n\n    data.v_frames = this.v_frames;\n\n    return data;\n  }\n\n  sameData(data, prevData) {\n    let same = true;\n\n    if (JSON.stringify(data.e) !== JSON.stringify(prevData.e)) same = false;\n    if (JSON.stringify(data.fixedVs) !== JSON.stringify(prevData.fixedVs)) same = false;\n    if (JSON.stringify(data.lMax) !== JSON.stringify(prevData.lMax)) same = false;\n    if (JSON.stringify(data.edgeChannel) !== JSON.stringify(prevData.edgeChannel)) same = false;\n    if (JSON.stringify(data.edgeActive) !== JSON.stringify(prevData.edgeActive)) same = false;\n    if (JSON.stringify(data.script) !== JSON.stringify(prevData.script)) same = false;\n    if (JSON.stringify(data.maxContraction) !== JSON.stringify(prevData.maxContraction)) same = false;\n    if (data.euler.x !== prevData.euler.x) same = false;\n    if (data.euler.y !== prevData.euler.y) same = false;\n    if (data.euler.z !== prevData.euler.z) same = false;\n\n    if (data.numChannels !== prevData.numChannels) same = false;\n    if (data.numActions !== prevData.numActions) same = false;\n\n    return same;\n  }\n\n  recordHistory() {\n    const data = this.saveData();\n\n    if (this.Model.iHistory !== -1) {\n      if (this.sameData(data, this.Model.history[this.Model.iHistory])) {\n        return;\n      }\n    }\n\n    console.log('record');\n\n    Model.history = Model.history.slice(0, Model.iHistory + 1);\n\n    Model.history.push(this.saveData());\n    if (Model.history.length > 50) {\n      Model.history.shift();\n    }\n    Model.iHistory = Model.history.length - 1;\n  }\n  \n  applyHistory(i, update=true) {\n    if (i === -1) return;\n\n    const data = Model.history[i];\n\n    let sim = this.simulate;\n    let grav = this.Model.gravity;\n    this.loadDict(data);\n    this.simulate = sim;\n    this.record = false;\n    this.Model.gravity = grav;\n    this.forceUpdate();\n    return;\n\n    this.v = [];\n    for (let v of data.v) {\n      this.v.push(new thre.Vector3(v[0], v[1], v[2]));\n    }\n    this.v0 = [];\n    for (let v0 of data.v0) {\n      this.v0.push(new thre.Vector3(v0[0], v0[1], v0[2]));\n    }\n    this.e = [];\n    for (let i=0; i<data.e.length; i++) {\n      this.e.push(data.e[i].slice());\n    }\n    this.fixedVs =data.fixedVs.slice();\n    this.lMax = data.lMax.slice();\n    this.edgeChannel = data.edgeChannel.slice();\n    this.edgeActive = data.edgeActive.slice();\n    this.script = [];\n    for (let i=0; i<data.script.length; i++) {\n      const actions = data.script[i].slice();\n      this.script.push(actions);\n    }\n\n    this.maxContraction = data.maxContraction.slice();\n    this.vStatus = data.vStatus.slice();\n    this.eStatus = data.eStatus.slice();\n    this.fStatus = data.fStatus.slice();\n\n    this.euler = data.euler.clone();\n\n    this.numChannels = data.numChannels;\n    this.numActions = data.numActions;\n    this.inflateChannel = data.inflateChannel.slice();\n    this.contractionPercent = data.contractionPercent.slice();\n  }\n  \n  undo() {\n    if (Model.iHistory - 1 >= 0) {\n      Model.iHistory -= 1;\n    }\n    this.applyHistory(Model.iHistory);\n  }\n  \n  redo() {\n    if (Model.iHistory + 1 < Model.history.length) {\n\n      console.log(Model.iHistory);\n      Model.iHistory += 1;\n      console.log('yes');\n      console.log(Model.iHistory);\n    }\n    this.applyHistory(Model.iHistory);\n  }\n\n  resetSelection() {\n    this.vStatus = new Array(this.v.length).fill(0);\n    this.eStatus = new Array(this.e.length).fill(0);\n    this.fStatus = new Array(this.f.length).fill(0);\n  }\n\n  recordV() {\n    this.v0 = [];\n    let bbox = this.bbox();\n    let zOffset = -bbox[5];\n\n    for (let v of this.v) {\n      let vv = v.clone();\n      vv.z += zOffset;\n      this.v0.push(vv);\n    }\n  }\n\n  resetV() {\n    this.iAction = 0;\n    this.numSteps = 0;\n\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].copy(this.v0[i]);\n    }\n\n    this.numSteps = 0;\n  }\n\n  precompute() {\n    const copyArrays = (oldValue, newValue)=>{\n      for (let i=0; i<Math.min(oldValue.length, newValue.length); i++) {\n        newValue[i] = oldValue[i];\n      }\n      return newValue;\n    }\n\n    this.l = [];\n    for (let i=0; i<this.e.length; i++) {\n      let e = this.e[i];\n      this.l.push(this.v[e[0]].distanceTo(this.v[e[1]]));\n    }\n\n    if (this.vel.length !== this.v.length) {\n      this.vel = [];\n      for (let i=0; i<this.v.length; i++) {\n        this.vel.push(new thre.Vector3());\n      }\n    }\n    if (this.maxContraction.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(Model.maxMaxContraction);\n      this.maxContraction = copyArrays(this.maxContraction, newValue);\n    }\n    if (this.fixedVs.length !== this.v.length) {\n      const newValue = new Array(this.v.length).fill(false);\n      this.fixedVs = copyArrays(this.fixedVs, newValue);\n    }\n    if (this.lMax.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(Model.defaultMaxLength);\n      this.lMax = copyArrays(this.lMax, newValue);\n    }\n    if (this.edgeActive.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(true);\n      this.edgeActive = copyArrays(this.edgeActive, newValue);\n    }\n    if (this.edgeChannel.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(0);\n      this.edgeChannel = copyArrays(this.edgeChannel, newValue);\n    }\n    if ((this.script.length !== this.numChannels)\n      || (this.script.length && this.script[0].length !== this.numActions))\n    {\n      const newValue = Array(this.numChannels).fill(false).map(_=>Array(this.numActions).fill(false));\n      if (this.script.length === 0) this.script = newValue;\n\n      for (let iChannel=0; iChannel<Math.min(this.script.length, newValue.length); iChannel++) {\n        for (let iAction=0; iAction<Math.min(this.script[0].length, newValue[0].length); iAction++) {\n          newValue[iChannel][iAction] = this.script[iChannel][iAction];\n        }\n      }\n      this.script = newValue;\n    }\n  }\n\n  initCheck() {\n\n    // rescale\n    if (false) {\n      let minlMax = 1e5;\n      for (let i = 0; i < this.e.length; i++) {\n        if (this.edgeActive[i]) {\n          if (this.l[i] < minlMax) {\n            minlMax = this.l[i];\n          }\n        }\n      }\n      console.log(`Minimum max length among active beams is ${minlMax}.`)\n      for (let i = 0; i < this.v.length; i++) {\n        this.v[i].divideScalar(minlMax);\n        this.v[i].multiplyScalar(Model.defaultMaxLength);\n      }\n    }\n\n    // lMax check\n    for (let i=0; i<this.e.length; i++) {\n      if (this.edgeActive[i]) {\n        if (this.lMax[i] !== this.Model.defaultMaxLength) {\n          console.log(`An active beam is having wrong max length ${this.lMax[i]}.`)\n          this.lMax[i] = this.Model.defaultMaxLength;\n        }\n      }\n    }\n\n  }\n\n  static getAngle(e0, e1, indices=false) {\n    // e0, e1: Edge instances\n    // indices: return indices of three vertices OAB\n    // return: angle between them, (return indices of three vertices OAB)\n    let vs0 = e0.vs;\n    let vs1 = e1.vs;\n    let vs;\n    if (vs0[0] === vs1[0]) vs = [vs0[0], vs0[1], vs1[1]];\n    else if (vs0[0] === vs1[1]) vs = [vs0[0], vs0[1], vs1[0]];\n    else if (vs0[1] === vs1[0]) vs = [vs0[1], vs0[0], vs1[1]];\n    else if (vs0[1] === vs1[1]) vs = [vs0[1], vs0[0], vs1[0]];\n    else console.error(\"edges not intersected\");\n\n    const O = vs[0].pos.clone();\n    const A = vs[1].pos.clone();\n    const B = vs[2].pos.clone();\n\n    A.sub(O);\n    B.sub(O);\n    if (indices) {\n      return [A.angleTo(B), [vs[0].id, vs[1].id, vs[2].id] ];\n    }\n\n    return A.angleTo(B);\n  }\n\n  updateCorners() {\n    // update this.c, this.a0\n    this.updateDataStructure();\n\n    this.c = [];\n    this.a0 = [];\n    for (let v of Vertex.all) {\n      let es = v.es;\n      for (let i=0; i<es.length-1; i++) {\n        let e0 = es[i];\n        let e1 = es[i+1];\n\n        let [alpha, ids] = Model.getAngle(e0, e1, true);\n        this.c.push(ids);\n        this.a0.push(alpha);\n      }\n    }\n  }\n\n  checkCorners() {\n    // return false if any angle change is larger than threshold\n    for (let i=0; i<this.c.length; i++) {\n      let [iO, iA, iB] = this.c[i];\n      let vec0 = this.v[iA].clone().sub(this.v[iO]);\n      let vec1 = this.v[iB].clone().sub(this.v[iO]);\n      let alpha = vec0.angleTo(vec1);\n      if (Math.abs(alpha - this.a0[i]) > Model.angleThreshold) return false;\n    }\n    return true;\n  }\n\n  update() {\n    // initialize forces\n    this.f = [];\n    for (let i=0; i<this.v.length; i++) {\n      this.f.push(new thre.Vector3());\n    }\n\n    // length maxContraction\n    for (let i=0; i<this.e.length; i++) {\n      let e = this.e[i];\n      let v0 = this.v[e[0]];\n      let v1 = this.v[e[1]];\n\n      let vec = v1.clone().sub(v0); // from 0 to 1\n\n      let l0 = this.lMax[i];\n      if (this.edgeActive[i]) {\n        let iChannel = this.edgeChannel[i];\n        let lMax = l0;\n        let lMin = lMax * (1 - this.maxContraction[i]);\n        l0 = lMax - this.contractionPercent[iChannel] * (lMax - lMin);\n      }\n      let d = vec.length() - l0;\n      let f = (d) * Model.k;\n      f = vec.normalize().multiplyScalar(f);  // from 0 to 1\n\n      this.f[e[0]].add(f);\n      this.f[e[1]].add(f.negate());\n    }\n\n    // gravity\n    for (let i=0; i<this.v.length; i++) {\n      if (Model.gravity) {\n        this.f[i].add(new thre.Vector3(0, 0, -Model.gravityFactor * Model.gravity));\n      }\n    }\n    // friction\n  }\n\n  runScript() {\n    if (this.script.length === 0) return 0;\n\n    if (this.numSteps > ((this.iAction + 1) % this.numActions) * Model.numStepsAction ) {\n      this.iAction = Math.floor(this.numSteps / Model.numStepsAction) % this.numActions;\n      if (this.editing) {\n        this.iAction = 0;\n      }\n\n      for (let iChannel=0; iChannel<this.numChannels; iChannel++) {\n        this.inflateChannel[iChannel] = this.script[iChannel][this.iAction];\n      }\n    }\n  }\n\n  step(n=1, scripting = true) {\n\n    this.recordFrames();\n\n    for (let iStep=0; iStep<n; iStep++) {\n      this.precompute();\n      if (!this.simulate) {return}\n\n      if (scripting) {\n        this.runScript();\n      }\n\n      if (this.editing) {\n        // this.center();\n      }\n\n      // update contraction percentage\n      for (let i=0; i<this.inflateChannel.length; i++) {\n        if (this.inflateChannel[i]) {\n          this.contractionPercent[i] -= Model.contractionPercentRate;\n          if (this.contractionPercent[i] < 0) {\n            this.contractionPercent[i] = 0;\n          }\n        }\n        else {\n          this.contractionPercent[i] += Model.contractionPercentRate;\n          if (this.contractionPercent[i] > 1) {\n            this.contractionPercent[i] = 1;\n          }\n        }\n      }\n\n\n      this.update(); // update lengths and forces\n\n      for (let i=0; i<this.v.length; i++) {\n        if (this.fixedVs[i]) continue;\n\n        if (this.sharedData.movingJoint && !this.sharedData.movingBody && this.vStatus[i] !== 2) continue;\n\n        this.vel[i].add(this.f[i].clone().multiplyScalar(Model.h));\n\n        if (this.v[i].z <= 0) {\n\n          if (Model.directionalFriction) {\n            if (this.vel[i].x > 0) {\n              this.vel[i].x *= (1 - Model.frictionFactor);\n            }\n            else {\n              this.vel[i].x *= (1 - Model.frictionFactor);\n            }\n          }\n          else {\n            this.vel[i].x *= (1 - Model.frictionFactor);\n          }\n\n          // if (!Model.directionalFriction) {\n          this.vel[i].y *= (1 - Model.frictionFactor);\n          // }\n          // else {\n          //   this.vel[i].y *= 0;\n          // }\n\n        }\n\n        this.vel[i].multiplyScalar(Model.dampingRatio);   // damping\n        if (this.vel[i].length() > 5) {\n\n          this.vel[i].multiplyScalar(Math.pow(0.9, Math.ceil(Math.log(5/this.vel[i].length()) / Math.log(0.9))));\n        }\n\n        this.v[i].add(this.vel[i].clone().multiplyScalar(Model.h));\n\n        if (this.v[i].z <= 0) {\n          this.vel[i].z = -this.vel[i].z;\n          this.v[i].z = 0;\n        }\n      }\n\n      if (this.numSteps % Model.angleCheckFrequency === 0) {\n        // console.assert(this.checkCorners());\n      }\n\n      this.numSteps += 1;\n    }\n\n    return this.v;\n  }\n\n  addJoint(iJoint) {\n    let v = new thre.Vector3();\n    v.copy(this.v[iJoint]);\n    let vec = new thre.Vector3(Model.defaultMinLength, 0, 0);\n    v = v.add(vec);\n    this.v.push(v);\n\n    let e = [iJoint, this.v.length - 1];\n    this.e.push(e);\n\n    // this.updateCorners();\n  }\n\n  addEdges(iJoints) {\n    for (let i=0; i<iJoints.length; i++) {\n      for (let j=i+1; j<iJoints.length; j++) {\n        let notExist = true;\n        for (let e of this.e) {\n          if (e.includes(iJoints[i]) && e.includes(iJoints[j])) {\n            notExist = false;\n            break;\n          }\n        }\n        if (notExist) this.e.push([iJoints[i], iJoints[j]]);\n      }\n    }\n\n    this.updateCorners();\n  }\n\n  addTet(iJoints) {\n    if (iJoints.length !== 3) {return}\n\n    let ij0 = iJoints[0];\n    let ij1 = iJoints[1];\n    let ij2 = iJoints[2];\n    let v0 = this.v[ij0];\n    let v1 = this.v[ij1];\n    let v2 = this.v[ij2];\n\n    let n_connecting_edges = 0;\n\n    let es_connecting_3j = [];\n    for (let e of this.e) {\n      let n_connected_js = 0;\n      let added = false;\n      if (e.includes(ij0)) {\n        if (! added) {\n          es_connecting_3j.push(e);\n          added = true;\n        }\n        n_connected_js += 1;\n      }\n      if (e.includes(ij1)) {\n        if (!added) {\n          es_connecting_3j.push(e);\n          added = true;\n        }\n        n_connected_js += 1;\n      }\n      if (e.includes(ij2)) {\n        if (!added) {\n          es_connecting_3j.push(e);\n          added = true;\n        }\n        n_connected_js += 1;\n      }\n\n      console.assert(n_connected_js <= 2);\n      if (n_connected_js === 2) n_connecting_edges += 1;\n    }\n\n    console.assert(n_connecting_edges <= 3);\n    if (n_connecting_edges === 3) {\n      let vs_connected = {};\n      for (let e of es_connecting_3j) {\n        if (e[0] in vs_connected) {vs_connected[e[0]] += 1}\n        else {\n          vs_connected[e[0]] = 1;\n        }\n        if (e[1] in vs_connected) {vs_connected[e[1]] += 1}\n        else {\n          vs_connected[e[1]] = 1;\n        }\n      }\n      let nv_connected_3j = 0;\n      let iv_mirror = -1;\n      for (let iv in vs_connected) {\n        iv = parseInt(iv);\n        if ([ij0, ij1, ij2].includes(iv)) continue;\n        let nv = vs_connected[iv];\n        if (nv === 3) {\n          iv_mirror = iv;\n          nv_connected_3j += 1;\n        }\n        console.log('iv_mirror: ', iv_mirror);\n\n        console.assert(nv <= 3);\n      }\n      if (nv_connected_3j > 1) {\n        console.log('more than one tet connected.');\n        return;\n      }\n\n      if (iv_mirror !== -1) {\n        let vm = this.v[iv_mirror];   // v_mirror\n        let vn = new thre.Vector3();  // v_new\n        vn.copy(vm);\n\n        let vec01 = new thre.Vector3();\n        let vec12 = new thre.Vector3();\n        vec01.subVectors(v1, v0);\n        vec12.subVectors(v2, v1);\n        let normal = vec01.cross(vec12).normalize();\n        let dot = vm.clone().sub(v0).dot(normal);\n        if (dot < 0) normal.negate();\n        let dist = vm.clone().sub(v0).dot(normal);\n        let displacement = normal.multiplyScalar(-2 * dist);\n        vn.add(displacement);\n\n        this.v.push(vn);\n        let e0 = [ij0, this.v.length - 1];\n        let e1 = [ij1, this.v.length - 1];\n        let e2 = [ij2, this.v.length - 1];\n        this.e.push(e0);\n        this.e.push(e1);\n        this.e.push(e2);\n      }\n    }\n    else {\n      console.log('Points not in a triangle.');\n    }\n  }\n\n  removeJoint(iJoint) {\n    if ([0,1,2,3].includes(iJoint)) return;\n\n    this.updateDataStructure();\n\n    const ees = [];   // edges to remove\n\n    const v = Vertex.all[iJoint];\n    for (let ee of v.es) {\n      ees.push(ee);\n    }\n\n    Vertex.all = Vertex.all.filter(vv=>vv !== v);\n    Edge.all = Edge.all.filter(ee=>!ees.includes(ee));\n\n    Model.reindexObjects(Vertex)\n    Model.reindexObjects(Edge)\n\n    this.updateFromDataStructure();\n    this.updateCorners();\n\n    this.forceUpdate();\n  }\n\n  removeBeam(iJoint) {\n    if ([0,1,2,3].includes(iJoint)) return;\n\n    this.updateDataStructure();\n\n    const ees = [];   // edges to remove\n\n    const v = Vertex.all[iJoint];\n    for (let ee of v.es) {\n      ees.push(ee);\n    }\n\n    Vertex.all = Vertex.all.filter(vv=>vv !== v);\n    Edge.all = Edge.all.filter(ee=>!ees.includes(ee));\n\n    Model.reindexObjects(Vertex)\n    Model.reindexObjects(Edge)\n\n    this.updateFromDataStructure();\n    this.updateCorners();\n\n    this.forceUpdate();\n  }\n\n  removeEdge() {\n\n    this.updateDataStructure();\n\n    let ees = [];   // edges to remove\n\n    // const v = Vertex.all[iJoint];\n    for (let i=0; i<this.e.length; i++) {\n      if (this.eStatus[i] === 2) {\n        console.log(i);\n        ees.push(Edge.all[i]);\n      }\n    }\n\n    // Vertex.all = Vertex.all.filter(vv=>vv !== v);\n    Edge.all = Edge.all.filter(ee=>!ees.includes(ee));\n    console.log(Edge.all);\n\n    Model.reindexObjects(Vertex)\n    Model.reindexObjects(Edge)\n\n    this.updateFromDataStructure();\n    this.updateCorners();\n\n    this.forceUpdate();\n\n  }\n\n  recordFrames() {\n    if (!this.record) return 0;\n\n    console.log('record');\n\n    let v_frame = [];\n    for (let v of this.v) {\n      v_frame.push([v.x, v.y, v.z]);\n    }\n\n    this.v_frames.push(v_frame);\n  }\n\n  resetRecording() {\n    console.log('reset_recording')\n    this.v_frames = [];\n  }\n\n  // update the model variables to data structures\n  updateDataStructure() {\n    Vertex.all = [];\n    for (let i = 0; i < this.v.length; i++) {\n      new Vertex(this.v[i], this.fixedVs[i], this.v0[i], this.vel[i], this.f[i]);\n    }\n    Edge.all = [];\n    for (let i = 0; i < this.e.length; i++) {\n      new Edge(this.e[i], this.lMax[i], this.maxContraction[i], this.edgeChannel[i], this.edgeActive[i], this.l[i]);\n    }\n  }\n\n  // convert data structures to model variables\n  updateFromDataStructure() {\n    this.v = [];\n    this.fixedVs = [];\n    this.v0 = [];\n    this.vel = [];\n    this.f = [];\n    for (let v of Vertex.all) {\n      this.v.push(v.pos);\n      this.fixedVs.push(v.fixed);\n      this.v0.push(v.pos0);\n      this.vel.push(v.vel);\n      this.f.push(v.f);\n    }\n\n    this.e = [];\n    this.lMax = [];\n    this.maxContraction = [];\n    this.edgeChannel = [];\n    this.edgeActive = [];\n    this.l = [];\n    for (let e of Edge.all) {\n      let vs = [e.vs[0].id, e.vs[1].id];\n      this.e.push(vs);\n      this.lMax.push(e.lMax);\n      this.maxContraction.push(e.maxContraction);\n      this.edgeChannel.push(e.edgeChannel);\n      this.edgeActive.push(e.edgeActive);\n      this.l.push(e.l);\n    }\n\n    this.vStatus = new Array(this.v.length).fill(0);\n    this.eStatus = new Array(this.e.length).fill(0);\n  }\n\n  static reindexObjects = (cls) => {\n    let i = 0;\n    for (let o of cls.all) {\n      o.id = i;\n      i += 1;\n    }\n  };\n\n  centroid(v0=false) {\n    let center = new thre.Vector3(0, 0, 0);\n    const vs = v0 ? this.v0 : this.v;\n    for (let v of vs) {\n      center.add(v);\n    }\n    center.divideScalar(this.v.length);\n    return center;\n  }\n\n  center(v0=false) {\n    // v0 : center v0 of the object if true\n    const cent = this.centroid();\n    const [xMax, yMax, zMax, xMin, yMin, zMin] = this.bbox();\n    const gap = Math.max([zMax - zMin, yMax - yMin, xMax - xMin]);\n\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].x -= cent.x;\n      this.v[i].y -= cent.y;\n      this.v[i].z -= zMin;\n      this.v[i].z += zMax - zMin;\n    }\n\n    this.recordV();\n  }\n\n  align(x=true, ivs = []) {\n    // align the axis of model(from centroid to the centroid of selected front vertices) along x/y axis\n    // x: align along x axis if true, otherwise along y axis\n    // ivs: indices of front vertices\n\n    if (ivs.length > 0) {\n      let centFront = new thre.Vector3(0, 0, 0);\n      for (let iv of ivs) {\n        const v = this.v[iv];\n        centFront.add(v);\n      }\n\n      centFront.divideScalar(ivs.length);\n\n      const cent = this.centroid();\n\n      centFront.sub(cent);\n      let vec = centFront.clone();\n      vec.z = 0;\n\n      // Returns the angle (in radians) from the X axis to a point.\n      let rotRadZ = Math.atan2(vec.y, vec.x);\n\n      if (!x) rotRadZ -= Math.PI / 2;\n\n      this.rotateTo(this.euler.x, this.euler.y, this.euler.z-rotRadZ);\n    }\n  }\n\n  stepsPerSecond() {\n    let t = new Date();\n    return this.numSteps / ((t.getTime() - this.timeStart.getTime()) / 1000);\n  }\n\n  bbox() {\n    let xMax, yMax, zMax, xMin, yMin, zMin;\n    xMax = yMax = zMax = -Infinity;\n    xMin = yMin = zMin = Infinity;\n    for (let v of this.v) {\n      if (v.x > xMax) xMax = v.x;\n      if (v.y > yMax) yMax = v.y;\n      if (v.z > zMax) zMax = v.z;\n      if (v.x < xMin) xMin = v.x;\n      if (v.y < yMin) yMin = v.y;\n      if (v.z < zMin) zMin = v.z;\n    }\n    return [xMax, yMax, zMax, xMin, yMin, zMin];\n  }\n\n  infoJoints() {\n    return 'joints: '+ this.v.length;\n  }\n\n  infoBeams() {\n    return 'actuators: ' + this.e.length;\n  }\n\n  fixJoints(ids) {\n    for (let i=0; i<ids.length; i++) {\n      let id = ids[i];\n      alert('not implemented');\n    }\n  }\n\n  unfixAll() {\n    this.fixedVs = [];\n    this.fixedVs = new Array(this.v.length).fill(false);\n  }\n\n  rotateTo(x, y, z) {\n    // this.resetV();\n\n    let center = this.centroid();\n    let eulerInverse = new thre.Euler();\n    eulerInverse.setFromVector3((new thre.Vector3()).setFromEuler(this.euler).negate(), 'ZYX');\n    this.euler = new thre.Euler(x, y, z);\n\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].sub(center);\n      this.v[i].applyEuler(eulerInverse);\n      this.v[i].applyEuler(this.euler);\n      this.v[i].add(center);\n    }\n\n    this.recordV();\n  }\n\n}\n\nexport {Model};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './style.css';\nimport React, {useRef, useState, useMemo, useEffect, useReducer} from 'react'\nimport  * as THREE from 'three'\nimport { extend, Canvas, useFrame, useThree, useResource, useUpdate } from '@react-three/fiber'\n\nimport {TransformControls, Stats} from '@react-three/drei';\nimport  {OrbitControls}  from '@react-three/drei';\n\n\n// import { EffectComposer, Outline } from 'react-postprocessing'\n// extend({OrbitControls})\n\nconst cWhite = new THREE.Color(0.6, 0.6, 0.6);\nconst cChannels = [\n  new THREE.Color(0.1, 0.3, 0.6),\n  new THREE.Color(0.5, 0.4, 0.1),\n  new THREE.Color(0.5, 0.1, 0.5),\n  new THREE.Color(0.1, 0.5, 0.2),\n  new THREE.Color(0.6, 0.2, 0.4),\n  new THREE.Color(0.2, 0.6, 0.4),\n  new THREE.Color(0.4, 0.6, 0.2),\n  new THREE.Color(0.6, 0.6, 0.2),\n  new THREE.Color(0.2, 0.6, 0.6)\n];\nconst cPureWhite = new THREE.Color(1, 1, 1);\nconst cFloor = new THREE.Color(0.9, 0.9, 0.9);\nconst cBlack = new THREE.Color(0.05, 0.05, 0.05);\nconst cSelected = new THREE.Color(0.9, 0.0, 0.0);\nconst cHovered = new THREE.Color(0.9, 0.05, 0.0);\nconst cFixed = new THREE.Color(0.2, 0.6, 0.6);\nconst cPassive = new THREE.Color(0.15, 0.15, 0.15);\nconst dIn = 0.05;     // diameter of the inner piston\nconst dOut = 0.065;    // diameter of the outer piston\nconst dConstraint = 0.06;    // diameter of the constraint\nconst lConstraint = 0.04;    // length of the constraint\nconst lPiston = 0.527;       // length of each half piston\nconst lTube = 0.330;         // length of tube of each joint\nconst dTube = 0.026;  // diameter of joint tubes\nconst dJoint = 0.06;    // diameter of the joint ball\nconst fps = 30;\nconst viewChannel = false;\nwindow.fps = fps;\n\nfunction Ball({v, d, iv, c, model, handleClick, handlePointerOver, handlePointerOut, setOControls, translating}) {\n\n  const mesh=useRef();\n  const material = useRef();\n  const transControls = useRef();\n  const [dragging, setDragging] = useState(false);\n  const prevPos = new THREE.Vector3();\n\n  let drag = false;\n\n  useFrame((state)=>{\n\n    if (mesh.current === null)  return;\n    // mesh.current.position.copy(v);\n    // console.log(transControls.current);\n\n    // mesh.current.position.copy(v);\n    material.current.color.copy(c);\n    // transControls.current.position.multiplyScalar(0);\n\n\n\n    if (translating) {\n      // console.log(mesh.current);\n      mesh.current.position.multiplyScalar(0);\n    //   const controls = transControls.current;\n      // if (dragging)  {\n      //   v.copy(controls.worldPosition.clone().add(controls.position));\n      //   mesh.current.position.copy(v);\n      // }\n      // else {\n      //   transControls.current.position.copy(v);\n      // }\n\n      if (drag) {\n      //   model.v[iv].copy(transControls.current.position.add(transControls.current.WorldPosition).sub(transControls.current.WorldPositionStart));\n      //   console.log(transControls.current.position);\n      //   console.log(transControls.current.worldPosition);\n      //   console.log(transControls.current.worldPositionStart);\n      //\n        model.v[iv].copy(transControls.current.object.position);\n        setOControls(false);\n        model.simulate=true;\n      }\n      else {\n      //   transControls.current.position.copy(v);\n      //\n        transControls.current.object.position.copy(model.v[iv]);\n        setOControls(true);\n      }\n    }\n    else {\n\n      transControls.current.object.position.copy(model.v[iv]);\n      mesh.current.position.multiplyScalar(0);\n    }\n  });\n\n  // useEffect(()=>{\n  //   const callbackDraggingChanged = (e) => {\n  //     setOControls(!e.value);\n  //     setDragging(e.value);\n  //\n  //     const controls = e.target;\n  //     if (e.value ===false) {\n  //       controls.object.position.multiplyScalar(0);\n  //       model.simulate=true;\n  //       model.recordHistory();\n  //     }\n  //     else {\n  //       // model.simulate=false;\n  //       prevPos.copy(controls.worldPosition);\n  //     }\n  //   }\n  //\n  //   const controls = transControls.current;\n  //   controls.position.copy(v);\n  //   if (controls) {\n  //     controls.addEventListener('dragging-changed', callbackDraggingChanged);\n  //     return () => {\n  //       controls.removeEventListener('dragging-changed', callbackDraggingChanged);\n  //     }\n  //   }\n  // })\n\n  useEffect(()=>{\n    const callbackDraggingChanged = (e) => {\n      setOControls(!e.value);\n      // console.log(transControls.current);\n      // setDragging(e.value);\n      drag = e.value;\n\n\n      // model.v[iv] = e.target.object.WorldPosition;\n      // console.log(transControls.current.position);\n\n\n\n      // const controls = e.target;\n      // if (e.value ===false) {\n      // controls.object.position.multiplyScalar(0);\n\n      // console.log(e.target);\n      //   model.recordHistory();\n      // }\n      // else {\n      //   // model.simulate=false;\n      //   prevPos.copy(controls.worldPosition);\n      // }\n    }\n    if (transControls.current) {\n      const controls = transControls.current;\n      window.tran = controls;\n      // controls.position.copy(v);\n      // if (controls) {\n      controls.addEventListener('dragging-changed', callbackDraggingChanged);\n      return () => {\n        controls.removeEventListener('dragging-changed', callbackDraggingChanged);\n      }\n    }\n    // }\n  })\n\n  return(\n    <TransformControls\n      ref={transControls}\n      // position={v}\n      enabled={translating}\n      showX={translating}\n      showY={translating}\n      showZ={translating}\n      mode={\"translate\"}\n      space={\"local\"}\n    >\n      <mesh\n        ref={mesh}\n        position={v}\n        castShadow={true}\n        scale={[d, d, d]}\n        onClick={handleClick}\n        onPointerOver={handlePointerOver}\n        onPointerOut={handlePointerOut}\n      >\n        <sphereBufferGeometry args={[1, 20, 20]}/>\n        {\n          viewChannel?\n          <meshBasicMaterial\n          ref={material}\n          color={cBlack}\n          transparent={true}\n          opacity={0.4}\n        />\n        :\n            <meshLambertMaterial\n              ref={material}\n              color={c}\n            />\n        }\n      </mesh>\n    </TransformControls>\n  )\n}\n\nfunction Joint({v, iv, model, setOControls, sharedData}) {\n  const selected = (model.vStatus[iv] === 2);\n  const hovered = (model.vStatus[iv] === 1);\n  const fixed = false;\n  const [translating, setTranslating] = useState(false);\n  const color = new THREE.Color();\n\n  useFrame((sate)=>{\n    const selected = (model.vStatus[iv] === 2);\n    const hovered = (model.vStatus[iv] === 1);\n    const fixed = model.fixedVs[iv];\n    color.copy(selected?cSelected:hovered?cHovered:fixed?cFixed:cWhite);\n    if (sharedData.movingJoint && model.vStatus[iv] === 2 && !translating) {\n      setTranslating(true);\n    }\n    if ((!sharedData.movingJoint || model.vStatus[iv] !== 2) && translating) {\n      setTranslating(false);\n    }\n  });\n\n  const handleClick = (e)=>{\n    if (sharedData.removingJoint) {\n      model.removeJoint(iv);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n    }\n    else if(sharedData.addingJoint){\n      model.addJoint(iv);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n    }\n    else if (sharedData.movingJoint) {\n      model.vStatus.fill(0);\n      model.vStatus[iv] = 2;\n    }\n    else {\n      model.vStatus[iv] = 2;\n    }\n    sharedData.updateGUI();\n    e.stopPropagation();\n  }\n\n  const handlePointerOver = (e)=>{\n    if (model.vStatus[iv] !== 2) model.vStatus[iv] = 1;\n    e.stopPropagation();\n  }\n  const handlePointerOut = (e)=>{\n    if (model.vStatus[iv] !== 2) model.vStatus[iv] = 0;\n    e.stopPropagation();\n  }\n\n  return(\n    <Ball key={\"ball\"} v={v} d={dJoint} iv={iv}\n          model={model}\n          handleClick={handleClick}\n          handlePointerOver={handlePointerOver}\n          handlePointerOut={handlePointerOut}\n          setOControls={setOControls}\n          translating={translating}\n          c={color}/>\n  )\n}\n\nfunction Cylinder({v0, v1, d, c, opacity, transparent, handleClick, handlePointerOver, handlePointerOut }) {\n  const mesh = useRef();\n  const material = useRef();\n\n  const update = (v0, v1)=>{\n    const pos = v0.clone().add(v1).divideScalar(2);\n    const vec = v1.clone().sub(v0);\n    const axis = new THREE.Vector3(0, 1, 0);\n\n    const l = vec.length();\n    vec.normalize();\n\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(axis, vec);\n    const euler = new THREE.Euler().setFromQuaternion(quaternion);\n    return [pos, l, euler]\n  }\n\n  const [pos, l, euler] = update(v0, v1);\n\n  useFrame((state)=>{\n    if (mesh.current === null)  return;   // TODO: why?\n\n    const [pos, l, euler] = update(v0, v1);\n    mesh.current.position.copy(pos);\n    mesh.current.rotation.copy(euler);\n    mesh.current.scale[1] = l;\n    material.current.color.copy(c);\n  })\n\n  return (\n    <mesh\n      ref={mesh}\n      position={[pos.x, pos.y, pos.z]}\n      rotation={euler}\n      castShadow={true}\n      scale={[d, l, d]}\n      onClick={handleClick}\n      onPointerOver={handlePointerOver}\n      onPointerOut={handlePointerOut}\n    >\n      <cylinderBufferGeometry args={[1, 1, 1, 20]} />\n      {\n        viewChannel?\n        <meshBasicMaterial\n        ref={material}\n        color={c}\n        opacity={opacity}\n        transparent={transparent}\n      />\n      :\n          <meshLambertMaterial\n            ref={material}\n            color={c}\n          />\n      }\n    </mesh>\n  )\n}\n\nfunction Beam({v0, v1, ie, model, sharedData\n              }) {\n  let vec = v1.clone().sub(v0);\n  let l = vec.length();\n  vec.normalize();\n  const vecPiston = vec.clone().multiplyScalar(lPiston);\n  const vecTube = vec.clone().multiplyScalar(lTube);\n  const vecConstraint = vec.clone().multiplyScalar(lConstraint);\n\n  const vOut0 = vecTube.clone().add(v0);\n  const vOut1 = vOut0.clone().add(vecPiston);\n  const vIn0 = v1.clone().sub(vecTube);\n  const vIn1 = vIn0.clone().sub(vecPiston);\n  const vTube00 = v0.clone();\n  const vTube01 = v0.clone().add(vecTube);\n  const vTube11 = v1.clone();\n  const vTube10 = v1.clone().sub(vecTube);\n  const vConstraint0 = vIn0.clone().sub(vec.clone().multiplyScalar(\n    model.lMax[ie] * (model.Model.maxMaxContraction - model.maxContraction[ie])));\n  const vConstraint1 = vConstraint0.clone().add(vecConstraint);\n\n  const cOut = new THREE.Color();\n  const cIn = new THREE.Color();\n  const cJoint = new THREE.Color();\n  const cBeam = new THREE.Color();\n  const cInner = new THREE.Color();\n\n  const changeColor =()=>{\n    const c = cChannels[model.edgeChannel[ie]];\n    if (sharedData.showChannel) {\n      const selected = (model.eStatus[ie] === 2);\n      const hovered = (model.eStatus[ie] === 1);\n      cOut.copy(selected ? cSelected : hovered ? cHovered : c);\n      cIn.copy(selected ? cSelected : hovered ? cHovered : c);\n      cJoint.copy(selected ? cSelected : hovered ? cHovered : c);\n      cBeam.copy(selected ? cSelected : hovered ? cHovered : c);\n    }\n    else {\n      const selected = (model.eStatus[ie] === 2);\n      const hovered = (model.eStatus[ie] === 1);\n      cOut.copy(selected ? cSelected : hovered ? cHovered : cBlack);\n      cIn.copy(selected ? cSelected : hovered ? cHovered : cWhite);\n      cJoint.copy(selected ? cSelected : hovered ? cHovered : cWhite);\n      cBeam.copy(selected ? cSelected : hovered ? cHovered : cPassive);\n      cInner.copy(c);\n    }\n    cInner.copy(c);\n    if (viewChannel) {\n      cOut.copy(cBlack);\n      cIn.copy(cBlack);\n      cJoint.copy(cBlack);\n    }\n  }\n  try {\n    changeColor();\n  }\n  catch (error) {\n    console.log('error: changeColor');\n  }\n\n  useFrame((state)=>{\n    let vec = v1.clone().sub(v0);\n    let l = vec.length();\n    vec.normalize();\n    const vecPiston = vec.clone().multiplyScalar(lPiston);\n    const vecTube = vec.clone().multiplyScalar(lTube);\n    const vecConstraint = vec.clone().multiplyScalar(lConstraint);\n    vOut0.copy(vecTube.clone().add(v0));\n    vOut1.copy(vOut0.clone().add(vecPiston));\n    vIn0.copy(v1.clone().sub(vecTube));\n    vIn1.copy(vIn0.clone().sub(vecPiston));\n    vTube00.copy(v0.clone());\n    vTube01.copy(v0.clone().add(vecTube));\n    vTube11.copy(v1.clone());\n    vTube10.copy(v1.clone().sub(vecTube));\n    vConstraint0.copy(vIn0.clone().sub(vec.clone().multiplyScalar(\n      model.lMax[ie] * (model.Model.maxMaxContraction - model.maxContraction[ie]) )));\n    vConstraint1.copy(vConstraint0.clone().add(vecConstraint));\n    try {\n      changeColor();\n    } catch(error) {\n      console.log('error: changeColor');\n    }\n  });\n\n  const handleClick = (e)=>{\n    model.eStatus[ie] = 2;\n    e.stopPropagation();\n  }\n  const handlePointerOver = (e)=>{\n    if (model.eStatus[ie] !== 2) {model.eStatus[ie] = 1;}\n    e.stopPropagation();\n\n    if (sharedData.showInfo) sharedData.infoPanel.style.display = 'block';\n    sharedData.infoPanel.style.left = String(e.clientX) + 'px';\n    sharedData.infoPanel.style.top = String(e.clientY) + 'px';\n    while (sharedData.infoPanel.firstChild) sharedData.infoPanel.removeChild(sharedData.infoPanel.firstChild);\n    sharedData.infoPanel.appendChild(sharedData.infoPanel.ownerDocument.createTextNode(\n      \"L: \" + String(Math.round(model.l[ie] * 1000) / 1000 / 1.2 * 93 ) + \"mm\",\n    ));\n    sharedData.infoPanel.appendChild(sharedData.infoPanel.ownerDocument.createElement(\"br\"));\n    sharedData.infoPanel.appendChild(sharedData.infoPanel.ownerDocument.createTextNode(\n      \"S: \" + String(Math.round(model.l[ie] * 1000) / 1000 / 1.2 * 62 ) + \"mm\",\n    ));\n  }\n  const handlePointerOut = (e)=>{\n    if (model.eStatus[ie] !== 2) {model.eStatus[ie] = 0;}\n    e.stopPropagation();\n    sharedData.infoPanel.style.display = \"none\";\n  }\n\n  const opacity = viewChannel? 0.15 : 1.0;\n  const transpacency = viewChannel;\n\n  const cylinders = [\n    <Cylinder key=\"out\" v0={vOut0} v1={vOut1} d={dOut} c={cOut} opacity={opacity} transparent={transpacency}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"in\" v0={vIn0} v1={vIn1} d={dIn} c={cIn} opacity={opacity} transparent={transpacency}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"joint0\" v0={vTube00} v1={vTube01} d={dTube} c={cJoint} opacity={opacity} transparent={transpacency}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"joint1\" v0={vTube10} v1={vTube11} d={dTube} c={cJoint} opacity={opacity} transparent={transpacency}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>\n    ];\n\n  if (viewChannel) {\n    cylinders.push(\n      <Cylinder key=\"inner\" v0={vTube00} v1={vTube11} d={dTube * 0.5} c={cInner} opacity={2} transparent={false}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>)\n  }\n\n  if (model.maxContraction[ie] !== model.Model.maxMaxContraction) {\n    cylinders.push(<Cylinder key=\"constraint\" v0={vConstraint0} v1={vConstraint1} d={dConstraint} c={cBlack}/>);\n  }\n\n  if (model.edgeActive[ie]) {\n    return (cylinders)\n  }\n  else {\n    return (\n      [<Cylinder key=\"beam\" v0={v0} v1={v1} d={dTube} c={cBeam} opacity={opacity} transparent={false}\n                handleClick={handleClick} handlePointerOver={handlePointerOver}\n                 handlePointerOut={handlePointerOut}/>]\n    )\n  }\n\n}\n\nfunction Triangle({vertices, c, opacity, handleClick, handlePointerOver, handlePointerOut}) {\n  const mesh = useRef();\n  const [,forceUpdate] = useReducer(x=>x+1, 0);\n  let vs = [];\n  for (let v of vertices) {\n    vs.push(v.x, v.y, v.z);\n  }\n  const f32array = Float32Array.from(vs);\n\n  return (\n    <mesh\n      ref={mesh}\n      onClick={handleClick}\n      onPointerOver={handlePointerOver}\n      onPointerOut={handlePointerOut}\n    >\n      <bufferGeometry attach={\"geometry\"}>\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          args={[f32array,3]}\n        />\n      </bufferGeometry>\n      <meshBasicMaterial\n        color={c}\n        opacity={opacity}\n        transparent={true}\n        side={THREE.FrontSide}\n      />\n    </mesh>\n  )\n}\n\nfunction Face({vertices, model, sharedData, i}) {\n\n  const color = new THREE.Color();\n  color.copy(model.fStatus[i] === 2 ? cSelected : model.fStatus[i] === 1 ? cHovered : cBlack);\n\n  const handleClick = (e)=>{\n    if (model.editing) {\n      // model.fStatus[i] = 2;\n      e.stopPropagation();\n      if (sharedData.addingJoint) {\n        model.addPolytope(i);\n        model.forceUpdate();\n      }\n    }\n  }\n\n  const handlePointerOver = (e)=>{\n    if (model.editing) {\n      if (model.fStatus[i] !== 2) model.fStatus[i] = 1;\n      e.stopPropagation();\n    }\n  }\n\n  const handlePointerOut = (e)=>{\n    if (model.editing) {\n      if (model.fStatus[i] !== 2) model.fStatus[i] = 0;\n      e.stopPropagation();\n    }\n  }\n\n  const [,forceUpdate] = useReducer(x=>x+1, 0);\n\n  useFrame( ()=>{\n    if (model.editing) forceUpdate();\n  })\n\n  return (\n    <Triangle vertices={vertices} c={color} opacity={model.editing?0.2:0}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}\n    />\n  )\n}\n\nfunction PneuMesh({\n  model,\n  sharedData,\n  setOControls\n}) {\n\n  const [clock] = React.useState(new THREE.Clock());\n\n  useFrame((state)=>{\n    const timeUntilNextFrame = (1000 / fps) - clock.getDelta();\n    setTimeout(()=>\n      {\n        state.ready=true;\n        state.invalidate();\n      },\n      Math.max(0, timeUntilNextFrame)\n    )\n    state.ready=false;\n    const nStepsPerSecond = 1 / model.Model.h;\n    model.step(Math.floor((1.5 / model.Model.h ) / fps));\n    if (model.iAction !== model.iActionPrev) {\n      sharedData.updateGUI();\n      model.iActionPrev = model.iAction;\n    }\n  }, 0)\n\n\n  const joints=[];\n  const beams=[];\n  const faces = [];\n\n  for (let [i, v] of model.v.entries()) {\n    joints.push(\n      <Joint\n        key={(\"J\" + String(i))}\n        v={v}\n        iv={i}\n        model={model}\n        setOControls={setOControls}\n        sharedData={sharedData}\n      />\n    )\n  }\n\n  for (let [i, e] of model.e.entries()) {\n    const v0 = model.v[e[0]];\n    const v1 = model.v[e[1]];\n    beams.push(\n      <Beam\n        key={(\"B\"+String(i))}\n        v0={v0}\n        v1={v1}\n        ie={i}\n        model={model}\n        sharedData={sharedData}\n        selected={e.selected}\n        hovered={e.hovered}\n      />\n      )\n  }\n\n  // for (let [i, f] of model.faces.entries()) {\n  //   const vertices = f.map(iv=>model.v[iv]);\n  //   faces.push(\n  //     <Face key={\"F\" + String(i)} vertices={vertices} sharedData={sharedData} model={model} i={i}/>\n  //   );\n  // }\n\n  return ([...joints, ...beams])\n}\n\n\nfunction DLight() {\n  const light = new THREE.DirectionalLight(new THREE.Color(1,1,1), 1.0);\n  light.position.set(0, 0, 100);\n  light.target.position.set(0, 0, -100);\n  light.castShadow = true;\n  let mapSize = 100;\n  light.shadow.mapSize.width = 20 * mapSize;\n  light.shadow.mapSize.height = 20 * mapSize;\n  light.shadow.camera.top = -3 * mapSize;\n  light.shadow.camera.right = 3 * mapSize;\n  light.shadow.camera.left = -3 * mapSize;\n  light.shadow.camera.bottom = 3 * mapSize;\n  // light.shadow.camera.near = 0.1;\n  // light.shadow.camera.far = 500;\n  return (<primitive object={light}/>)\n}\n\nconst Controls = ({oControls}) => {\n\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n  /* Invoke the OrbitControls' update function on every frame */\n  useFrame(() => oControls.current.update())\n\n  return <OrbitControls enableDamping={false} ref={oControls} args={[camera, domElement]}/>\n}\n\nfunction Viewer({model, sharedData}) {\n  const oControls = useRef();\n  model.controls = oControls;\n  const [, forceUpdate] = useReducer(x => { return (x+1)}, 0);\n  model.forceUpdate = forceUpdate;\n  window.updateModel = forceUpdate;\n  model.recordHistory();\n\n  function setOControls(s){\n    oControls.current.enabled = s\n  }\n\n  return (\n      <Canvas\n        shadowMap={true}\n        concurrent={true}\n        onCreated={({gl, camera}) => {\n          // let intensity = 0.92\n          let intensity = 1.0\n          gl.setClearColor(new THREE.Color(intensity, intensity, intensity))\n          gl.setPixelRatio(window.devicePixelRatio);  // required\n          gl.shadowMap.enabled=true;  // default\n          gl.shadowMap.type=THREE.PCFSoftShadowMap; // default\n        }}\n        camera={{\n          fov: 45,\n          position:[0, -20, 1],\n          up:[0, 0, 1]\n        }}\n\n        gl={{antialias:true}}\n      >\n        <Controls oControls={oControls}/>\n        <ambientLight\n          color={new THREE.Color(1, 1, 1)}\n          intensity={0.5}\n        />\n\n        <DLight/>\n\n        <mesh\n          position={[0, 0, 0- dJoint / 2]}\n          receiveShadow={true}\n          visible={true}\n        >\n          <planeGeometry args={[10000, 10000]}/>\n          <shadowMaterial opacity={0.4} transparent={true}/>\n        </mesh>\n\n\n        <mesh\n          position={[0, 0, -0.01 - dJoint / 2]}\n          receiveShadow={true}\n          visible={true}\n        >\n          <planeGeometry args={[10000, 10000]}/>\n          <meshLambertMaterial opacity={0.5} color={cFloor} transparent={true} side={THREE.DoubleSide}/>\n        </mesh>\n\n        <gridHelper\n          args={[30, 30]}\n          rotation-x={-Math.PI/2}\n          position-z={0}\n          visible={true}\n        />\n\n        <PneuMesh model={model} sharedData={sharedData} setOControls={setOControls}/>\n        {/*<Stats/>*/}\n\n      </Canvas>\n  );\n}\n\nexport default Viewer;\n","import './style.css';\nimport React, {useRef, useState, useMemo, useReducer} from 'react'\nimport {makeStyles, Grid, List, ListItem, ListItemIcon, ListItemText, Divider,\n        Icon, Slider, Switch, Typography, IconButton}\n        from '@material-ui/core'\nimport {\n  AccessAlarm, Publish, GetApp, ChevronLeft, ExitToApp, Edit, GpsFixed, GpsNotFixed,\n  RadioButtonChecked, RadioButtonUnchecked, FilterCenterFocus, AddCircleOutlineRounded, VerticalAlignCenter,\n  SettingsEthernet, WbSunny, FiberManualRecord, Lock, LockOpen, AddCircleOutline, ChangeHistory, HighlightOff,\n  Link, LinkOff, Visibility, OpenWith, ColorLens, Palette, ArrowDownward, Comment, Computer, HelpOutline\n} from \"@material-ui/icons\";\n\nconst cBackground = \"rgba(200, 200, 200, 0.6)\";\nconst cTransparent = \"rgba(200, 200, 200, 0.0)\";\n\nconst cHovered = \"rgba(250, 250, 250, 0.9)\";\nconst cHighlight = \"rgba(250, 100, 50, 0.9)\";\nconst cOff = \"rgba(150, 150, 150, 1)\";\n\nconst cChannels = [\n  \"rgb(100, 150, 220)\",\n  \"rgb(240, 240, 20)\",\n  \"rgb(200, 100, 200)\",\n  \"rgb(100, 200, 130)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n];\n\nconst widthBlock = 5;   // vh\nconst heightBlock = 5;    // vh\nconst paddingBlock = 1;   // vh\nconst marginBlock = 0.5;     // vh\nconst paddingBlocks = 0.5;\nconst widthSlider = 20;\nconst marginSlider = 0.1;\nconst widthSliders = (widthSlider + marginSlider * 2);\n\n\nconst useStyles = makeStyles((theme) => ({\n  mainGUI: {\n    position: \"absolute\",\n    right: \"1.5vh\",\n    top: \"1.5vh\",\n    width: \"28vh\",\n    height: \"auto\",\n    background: cBackground,\n    \"& .MuiList-root\" : {\n      \"& .MuiListItem-root\" : {\n        minHeight: \"6vh\"\n      }\n    }\n  },\n  editingGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"1.5vh\",\n    width: \"30vh\",\n    // height: \"30vh\",\n    background: cBackground,\n  },\n  scriptGUI: {\n    position: \"absolute\",\n    left: \"2vh\",\n    bottom: \"2vh\",\n    background: cBackground,\n  },\n  editingScriptGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"44vh\",\n    width: \"30vh\",\n    background: cBackground,\n  },\n  help: {\n    position: \"absolute\",\n    cursor: \"pointer\",\n    right: \"10px\",\n    bottom: \"10px\",\n    width: \"40px\",\n    height: \"40px\",\n    alignContent: \"center\",\n    background: cBackground,\n  },\n  examples: {\n    position: \"absolute\",\n    width: \"130px\",\n    right: \"60px\",\n    bottom: \"10px\",\n    height: \"40px\",\n    background: cBackground,\n    cursor: \"pointer\",\n\n  }\n}))\n\nfunction SettingActive({model, updateGUI}) {\n  const icons = [];\n\n  let passive =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === true)\n    ));\n\n  let active =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === false)\n    ));\n\n  icons.push(\n    <Grid item key={\"active\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = true;\n              model.lMax[ie] = model.Model.defaultMaxLength;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <WbSunny/>\n    </IconButton>\n    </Grid>\n  )\n\n  icons.push(\n    <Grid item key={\"passive\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = false;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <FiberManualRecord/>\n    </IconButton>\n    </Grid>\n  )\n\n\n  return (\n    <ListItem>\n      <ListItemText style={{width: \"50%\"}}>\n        Active / Passive\n      </ListItemText>\n      <Grid container style={{width: \"50%\"}}>\n        {icons}\n      </Grid>\n    </ListItem>\n  )\n}\n\nfunction SettingChannel({n, model, updateGUI}) {\n  const icons = [];\n\n  for (let i=0; i<n; i++) {\n    let checked =\n      ![...Array(model.e.length).keys()].every(ie=>(\n        (model.eStatus[ie] !== 2) || ((model.eStatus[ie] === 2) && (model.edgeChannel[ie] !== i))\n      ))\n\n    const color = cChannels[i];\n\n    icons.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}} >\n        <IconButton\n          size={\"small\"}\n          onClick={()=> {\n              for (let ie = 0; ie < model.e.length; ie++) {\n                if (model.eStatus[ie] === 2) {\n                  model.edgeChannel[ie] = i;\n                }\n              }\n              updateGUI();\n\n            }\n          }\n        >\n          {checked? <RadioButtonChecked style={{\"color\": color}}/> :  <RadioButtonUnchecked style={{\"color\": color}}/>}\n        </IconButton>\n      </Grid>\n    )\n  }\n\n  return (\n  <ListItem>\n    <Grid container styles={{width: \"50%\"}}>\n      {icons}\n    </Grid>\n  </ListItem>\n  )\n}\n\nfunction ControlChannel({n, model, updateGUI}) {\n  const switches = [];\n\n  for (let i=0; i<n; i++) {\n    switches.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}}>\n        <Switch\n          size={\"small\"}\n          checked={Boolean(model.inflateChannel[i])}\n          onClick={(e)=>{\n            console.log(e.target.checked);\n            model.inflateChannel[i] = e.target.checked;\n            updateGUI();\n          }}\n        />\n        </Grid>\n    );\n  }\n\n\n  return(\n    <ListItem>\n      <Grid container styles={{width: \"100%\"}} alignItems={\"center\"}>\n        {switches}\n      </Grid>\n    </ListItem>\n  )\n}\n\nconst Examples = () => {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <Grid\n      container\n      style={{\n        height: \"39px\",\n        border: `3px solid ${hovered?cHighlight:cTransparent}`,\n\n      }}\n      onPointerOver={()=>{setHovered(true)}}\n      onPointerOut={()=>{setHovered(false)}}\n      onClick={()=>{window.open('https://climbing-mat-e4b.notion.site/Web-PneuMesh-Examples-23cc48c3172849cc95b53ba68cc9d251','_blank').focus()}}\n    >\n      <Grid\n        container\n        xs={4}\n        alignItems={\"center\"}\n      >\n\n        <ExitToApp\n          style={{height: \"30px\", width: \"30px\"}}\n        />\n      </Grid>\n\n      <Grid\n        container\n        xs={8}\n        alignItems={\"center\"}\n      >\n        <div>Examples</div>\n      </Grid>\n\n    </Grid>\n  )\n}\n\n\nconst Help = () => {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <Grid\n      style={{\n        height: \"30px\",\n        width: \"30px\",\n        border: `3px solid ${hovered?cHighlight:cTransparent}`,\n        padding: \"2px\",\n      }}\n      onPointerOver={()=>{setHovered(true)}}\n      onPointerOut={()=>{setHovered(false)}}\n      onClick={()=>{window.open('https://climbing-mat-e4b.notion.site/Web-PneuMesh-Tutorial-e1182476d3d34b85b9619df3419c7c40','_blank').focus()}}\n    >\n      <HelpOutline\n        style={{height: \"30px\", width: \"30px\"}}\n      />\n    </Grid>\n  )\n}\n\nfunction TemporalControl({model, sharedData, updateGUI, classes}) {\n  model.precompute();\n  const widthBlocks = (widthBlock + marginBlock * 2) * model.numActions + paddingBlocks * 2;\n\n  const Block = ({model, iChannel, iAction}) => {\n    const [hovered, setHovered] = useState(false);\n    const isOn = model.script[iChannel][iAction];\n    const [actuating, setActuating] = useState(iAction===model.iAction);\n\n    return (\n      <Grid item\n            key={iAction}\n            className={classes.scriptBlock}\n            style={{\n              cursor: \"pointer\",\n              background: cChannels[iChannel],\n              width: `${widthBlock}vh`,\n              height: `${heightBlock}vh`,\n              padding: `${paddingBlock}vh`,\n              margin: `${marginBlock}vh`,\n              border: `${hovered?\"4px\":\"2px\"} solid ${model.iAction===iAction?cHighlight:cHovered}`,\n              opacity: `${isOn?1:hovered?0.8:0.1}`\n            }}\n            onPointerOver={()=>{setHovered(true)}}\n            onPointerOut={()=>{setHovered(false)}}\n            onClick={()=>{model.script[iChannel][iAction]=!isOn}}\n      >\n      </Grid>\n    )\n  }\n\n  const Row = ({model, iChannel}) => {\n    const blocks = [];\n    for (let iAction=0; iAction<model.numActions; iAction++) {\n      const isOn=true;\n      blocks.push(\n        <Block key={iAction} model={model} isOn={isOn} iChannel={iChannel} iAction={iAction} />\n      );\n    }\n\n    return(\n      <Grid container item spacing={0}>\n        {/*<React.Fragment>*/}\n          {blocks}\n        {/*</React.Fragment>*/}\n      </Grid>\n    )\n  }\n\n  const rows = [];\n  for (let iChannel=0; iChannel<model.numChannels; iChannel++) {\n    rows.push(<Row key={iChannel} iChannel={iChannel} model={model}/>)\n  }\n\n  return ([\n    <Grid key={'buttons'} container item spacing={0} style={{padding:`${paddingBlocks}vh`, width: `${widthBlocks}vh`}}>\n      {rows}\n    </Grid>,\n\n    ]\n  );\n}\n\n\nfunction GUI({model, options, sharedData}) {\n\n  const [, updateGUI] = useReducer(x => x+1, 0);\n  sharedData.updateGUI = updateGUI;\n  window.updateGUI = updateGUI;\n  model.recordHistory();\n\n  const classes = useStyles();\n\n  const load = (e)=>{\n    let input = document.createElement('input');\n    document.body.appendChild(input);\n    input.type = 'file';\n    input.id = 'inputFile';\n    input.style = 'display:none';\n\n    document.getElementById(\"inputFile\").click();\n    document.getElementById(\"inputFile\").onchange = ()=>{\n\n      let reader = new FileReader();\n      reader.onload = (event) => {\n        let inputFileString = event.target.result;\n        window.inputFileString = inputFileString;\n        let data = JSON.parse(inputFileString);\n        window.data =data;\n        model.loadDict(data);\n        model.simulate=false;\n        model.Model.gravity=true;\n        model.forceUpdate();\n        updateGUI();\n      };\n      reader.readAsText(document.getElementById(\"inputFile\").files[0]);\n      document.body.removeChild(input);\n    };\n  }\n\n  const save = (e)=>{\n    model.recordV();\n\n    let data = model.saveData();\n    let json = JSON.stringify(data);\n\n    let download = document.createElement('a');\n    document.body.appendChild(download);\n    download.download = 'download.json';\n    download.style.display = 'none';\n    download.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(json);\n    download.click();\n    document.body.removeChild(download);\n  }\n\n  return (\n    [\n    <div key={\"mainGUI\"} className={classes.mainGUI}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <List>\n        <ListItem button\n                  onClick={save}>\n          <ListItemIcon>\n            <GetApp/>\n          </ListItemIcon>\n          <ListItemText>\n            Download\n          </ListItemText>\n        </ListItem>\n\n        <ListItem button selected={false}\n                  onClick={load}>\n          <ListItemIcon>\n            <Publish/>\n          </ListItemIcon>\n          <ListItemText>\n            Load\n          </ListItemText>\n        </ListItem>\n\n        <Divider/>\n        <Divider/>\n\n        <ListItem button selected={model.editing}\n                  onClick={(e)=>{\n                    model.editing = !model.editing;\n\n                    if (model.editing) {\n                      sharedData.editingScript = false;\n                      model.simulate = false;\n                      model.Model.gravity = false;\n                      sharedData.movingJoint = false;\n                      sharedData.removingJoint = false;\n                      sharedData.addingJoint = false;\n                      model.center();\n                      for (let i=0; i<model.v.length; i++) {\n                        model.vel *= 0;\n                      }\n                    }\n                    if (!model.editing) {\n                      sharedData.movingJoint = false;\n                      sharedData.removingJoint = false;\n                      sharedData.addingJoint = false;\n                      model.Model.gravity = true;\n                      model.simulate = true;\n                    }\n\n                    model.controls.current.target = model.centroid();\n\n                    updateGUI();\n                    model.forceUpdate();\n                  }}>\n          <ListItemIcon>\n            <ChevronLeft/>\n          </ListItemIcon>\n          <ListItemText>\n            Edit Shape (E)\n          </ListItemText>\n        </ListItem>\n\n\n        {/*channel color*/}\n        <ListItem>\n          <ListItemIcon>\n            <Palette/>\n          </ListItemIcon>\n          <ListItemText style={{left: \"2px\"}}>\n            ChannelColor\n          </ListItemText>\n          <Switch\n            i={1}\n            checked={sharedData.showChannel}\n            onChange={(e)=>{\n              sharedData.showChannel = !sharedData.showChannel;\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n        <SettingChannel n={model.numChannels} model={model} updateGUI={updateGUI}/>\n\n\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            Contraction\n          </Typography>\n          <Slider\n            style={{width: \"50%\"}}\n            disabled={\n             model.eStatus.includes(2) ?\n               ![...Array(model.e.length).keys()].every(ie=>(\n                 (model.eStatus[ie]===2 && model.edgeActive[ie]) || (model.eStatus[ie] !==2))) :\n                 true\n            }\n            defaultValue={model.Model.maxMaxContraction}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={model.Model.contractionInterval}\n            min={0}\n            max={model.Model.maxMaxContraction}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              for (let i=0; i<model.e.length; i++) {\n                if (model.eStatus[i] === 2) {\n                  model.maxContraction[i] = val;\n                }\n              }\n            }}\n            onPointerUp={()=>{model.forceUpdate();}}\n          />\n        </ListItem>\n\n\n\n        {/*fix joints*/}\n        <ListItem>\n          <ListItemText style={{width: \"50%\"}}>\n            Fix Joints (F/U)\n          </ListItemText>\n          <Grid container style={{width: \"50%\"}}  spacing={0} alignItems={\"center\"}>\n            <Grid item key={\"fix\"} style={{width: \"50%\" , textAlign: \"center\"}}>\n\n              <IconButton\n                size={\"small\"}\n                onClick={(e)=>{\n                  for (let i=0; i<model.v.length; i++) {\n                    if (model.vStatus[i] === 2) model.fixedVs[i] = true;\n                  }\n                  updateGUI();\n                  model.forceUpdate();\n                }}>\n                <Lock/>\n              </IconButton>\n            </Grid>\n\n            <Grid item key={\"unfix\"} style={{width: \"50%\" , textAlign: \"center\"}}>\n              <IconButton\n                size={\"small\"}\n                onClick={(e)=>{\n                  for (let i=0; i<model.v.length; i++) {\n                    if (model.vStatus[i] === 2) model.fixedVs[i] = false;\n                  }\n                  updateGUI();\n                  model.forceUpdate();\n                }}>\n                <LockOpen/>\n              </IconButton>\n            </Grid>\n          </Grid>\n\n        </ListItem>\n\n\n        <Divider/>\n\n        <SettingActive model={model} updateGUI={updateGUI}/>\n\n\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            Length\n          </Typography>\n            <Slider\n              style={{width: \"50%\"}}\n              disabled={\n                model.eStatus.includes(2) ?\n                  ![...Array(model.e.length).keys()].every(ie=>(\n                    (model.eStatus[ie]===2 && !model.edgeActive[ie]) || (model.eStatus[ie] !==2))) :\n                  true\n              }\n              defaultValue={model.Model.defaultMinLength}\n              aria-labelledby={\"discrete-slider-custom\"}\n              step={model.Model.contractionInterval * model.Model.defaultMaxLength}\n              min={model.Model.defaultMinLength}\n              max={model.Model.defaultMaxLength}\n              valueLabelDisplay={\"auto\"}\n              // marks={marks}\n              onChange={\n                (e, val)=>{\n                  for (let i=0; i<model.e.length; i++) {\n                    if (model.eStatus[i] === 2 && model.edgeActive[i] === false) {\n                      model.lMax[i] = val;\n                    }\n                  }\n                  model.forceUpdate();\n                }\n              }\n              onPointerUp={()=>{model.forceUpdate()}}\n            />\n        </ListItem>\n\n\n\n\n        {/*<ListItem button selected={sharedData.editingScript}*/}\n        {/*          onClick={(e)=>{*/}\n        {/*            sharedData.editingScript = !sharedData.editingScript;*/}\n        {/*            model.editing = false;*/}\n        {/*            updateGUI();*/}\n        {/*          }}>*/}\n        {/*  <ListItemIcon>*/}\n        {/*    <ChevronLeft/>*/}\n        {/*  </ListItemIcon>*/}\n        {/*  <ListItemText>*/}\n        {/*    Script & Channel*/}\n        {/*  </ListItemText>*/}\n        {/*</ListItem>*/}\n\n        {/*<ControlChannel n={model.numChannels} model={model} updateGUI={updateGUI}/>*/}\n\n        <Divider/>\n        <Divider/>\n\n\n        {/*graivty*/}\n        <ListItem>\n          <ListItemIcon>\n            <ArrowDownward/>\n          </ListItemIcon>\n          <ListItemText>\n            Gravity\n          </ListItemText>\n          <Switch\n            i={0}\n            checked={model.Model.gravity}\n            onChange={(e)=>{\n              model.Model.gravity = !model.Model.gravity;\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n        {/*simulation*/}\n        <ListItem>\n          <ListItemIcon>\n            <Computer/>\n          </ListItemIcon>\n          <ListItemText>\n            Simulate\n          </ListItemText>\n          <Switch\n            i={0}\n            checked={model.simulate}\n            onChange={(e)=>{\n              model.simulate = !model.simulate;\n              if (!model.simulate) {\n                model.record = false;\n              }\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n\n        <ListItem>\n          <ListItemIcon>\n            <Computer/>\n          </ListItemIcon>\n          <ListItemText>\n            Record\n          </ListItemText>\n          <Switch\n            i={0}\n            checked={model.record}\n            onChange={(e)=>{\n              model.record = !model.record;\n              if (model.record) {\n                model.simulate = true;\n                model.resetRecording();\n              }\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n\n        {/*# of Actions*/}\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            # of Actions\n          </Typography>\n          <Slider\n            key={'numActions'}\n            style={{width: \"50%\"}}\n            defaultValue={model.Model.defaultNumActions}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={20}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numActions = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n        <Divider/>\n\n\n        {/*<ListItem>*/}\n        {/*  <Typography style={{width: \"50%\"}}>*/}\n        {/*    Friction*/}\n        {/*  </Typography>*/}\n        {/*  <Slider*/}\n        {/*    style={{width: \"50%\"}}*/}\n        {/*    defaultValue={model.Model.frictionFactor}*/}\n        {/*    aria-labelledby={\"discrete-slider-custom\"}*/}\n        {/*    step={0.1}*/}\n        {/*    min={0}*/}\n        {/*    max={1}*/}\n        {/*    valueLabelDisplay={\"auto\"}*/}\n        {/*    // marks={marks}*/}\n        {/*  />*/}\n        {/*</ListItem>*/}\n\n        <Divider/>\n\n        <ListItem button\n                  onClick={(e)=>{\n                    model.controls.current.target = model.centroid();\n                    model.forceUpdate();\n                  }}>\n          <ListItemIcon>\n            <Visibility/>\n          </ListItemIcon>\n          <ListItemText>\n            Look At Center\n          </ListItemText>\n        </ListItem>\n\n\n\n        {/*<ListItem>*/}\n        {/*  <ListItemText>*/}\n        {/*    Length Info*/}\n        {/*  </ListItemText>*/}\n        {/*  <Switch*/}\n        {/*    i={2}*/}\n        {/*    checked={sharedData.showInfo}*/}\n        {/*    onChange={(e)=>{*/}\n        {/*      sharedData.showInfo = !sharedData.showInfo;*/}\n        {/*      updateGUI();*/}\n        {/*    }}*/}\n        {/*  />*/}\n        {/*</ListItem>*/}\n\n      </List>\n    </div>,\n\n\n    <div key={\"editingGUI\"} className={classes.editingGUI}\n         style={model.editing ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n        <List>\n          {/*<ListItem>*/}\n          {/*  <ListItemText>*/}\n          {/*    Add Joint*/}\n          {/*  </ListItemText>*/}\n          {/*  <Switch*/}\n          {/*    key={\"add_joint\"}*/}\n          {/*    checked={sharedData.addingJoint}*/}\n          {/*    onChange={(e,val)=>{*/}\n          {/*      sharedData.addingJoint = val;*/}\n          {/*      if (val) {*/}\n          {/*        sharedData.removingJoint = false;*/}\n          {/*        sharedData.movingJoint = false;*/}\n          {/*      }*/}\n          {/*      updateGUI();*/}\n          {/*    }}*/}\n          {/*  />*/}\n          {/*</ListItem>*/}\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      if (iJoints.length !== 1) return;\n                      model.addJoint(iJoints[0]);\n                      model.precompute();\n                      model.recordV();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <AddCircleOutline />\n            </ListItemIcon>\n            <ListItemText>\n              Add Joint (A)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      model.addEdges(iJoints);\n                      model.precompute();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <Link />\n            </ListItemIcon>\n            <ListItemText>\n              Connect Joints (C)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      model.addTet(iJoints);\n                      model.precompute();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <ChangeHistory />\n            </ListItemIcon>\n            <ListItemText>\n              Add Tet (T)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      if (iJoints.length !== 1) return;\n                      model.removeJoint(iJoints[0]);\n                      model.precompute();\n                      model.recordV();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <HighlightOff />\n            </ListItemIcon>\n            <ListItemText>\n              Remove Joint (D)\n            </ListItemText>\n          </ListItem>\n\n\n          <ListItem button\n                    onClick={(e)=>{\n                      model.removeEdge();\n                      model.precompute();\n                      model.recordV();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <HighlightOff />\n            </ListItemIcon>\n            <ListItemText>\n              Remove Beam (R)\n            </ListItemText>\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemIcon>\n              <OpenWith />\n            </ListItemIcon>\n            <ListItemText>\n              Move Joint (M)\n            </ListItemText>\n            <Switch\n              key={\"add_joint\"}\n              checked={sharedData.movingJoint}\n              onChange={(e,val)=>{\n                sharedData.movingJoint = val;\n                if (val) {\n                  sharedData.removingJoint = false;\n                  sharedData.addingJoint = false;\n                }\n                model.simulate = false;\n                model.resetSelection();\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Move Body\n            </ListItemText>\n            <Switch\n              disabled={!sharedData.movingJoint}\n              key={\"add_joint\"}\n              checked={sharedData.movingBody}\n              onChange={(e,val)=>{\n                sharedData.movingBody = val;\n                // model.resetSelection();\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n\n          {/*<ListItem>*/}\n          {/*  <ListItemText>*/}\n          {/*    Remove Joint*/}\n          {/*  </ListItemText>*/}\n          {/*  <Switch*/}\n          {/*    key={\"remove_joint\"}*/}\n          {/*    checked={sharedData.removingJoint}*/}\n          {/*    onChange={(e,val)=>{*/}\n          {/*      sharedData.removingJoint = val;*/}\n          {/*      if (val) {*/}\n          {/*        sharedData.addingJoint = false;*/}\n          {/*        sharedData.movingJoint = false;*/}\n          {/*      }*/}\n          {/*      updateGUI();*/}\n          {/*    }}*/}\n          {/*  />*/}\n          {/*</ListItem>*/}\n\n\n          <Divider/>\n\n          <ListItem>\n            <ListItemText>\n              X:\n            </ListItemText>\n            <Slider\n              key={\"sliderX\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(val, model.euler.y, model.euler.z);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText>\n              Y:\n            </ListItemText>\n            <Slider\n              key={\"sliderY\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(model.euler.x, val, model.euler.z);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              Z:\n            </ListItemText>\n            <Slider\n              key={\"sliderZ\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(model.euler.x, model.euler.y, val);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem button\n                    onClick={(e)=>{\n                      model.numSteps = 0;\n                      model.simulate = false;\n                      model.v = model.v0;\n                      model.center();\n                      model.precompute();\n                      model.forceUpdate();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <FilterCenterFocus />\n            </ListItemIcon>\n            <ListItemText>\n              Center Model\n            </ListItemText>\n          </ListItem>\n\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            model.recordV();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <SettingsEthernet />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Record V*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            const iJointsSelected = [];*/}\n          {/*            for (let i=0; i<model.v.length; i++) {*/}\n          {/*              if (model.vStatus[i] === 2) iJointsSelected.push(i);*/}\n          {/*            }*/}\n\n          {/*            model.align(true, iJointsSelected);*/}\n          {/*            model.forceUpdate();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <VerticalAlignCenter />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Align with X-axis*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            // model.resetV();*/}\n          {/*            model.forceUpdate();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <SettingsEthernet />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Reset*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n        </List>\n\n\n    </div>,\n\n    <div key={\"scriptGUI\"} className={classes.scriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"block\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <TemporalControl model={model} sharedData={sharedData} classes={classes} updateGUI={updateGUI}/>\n    </div>,\n\n\n    <div key={\"editingScriptGUI\"} className={classes.editingScriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n\n      <Grid key={'numChannels'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`, width: \"10vh\", fontSize:\"small\"}}>\n          Channels\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numChannels'}\n            defaultValue={model.Model.defaultNumChannels}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={5}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numChannels = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid key={'numActions'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`,  width: \"10vh\", fontSize:\"small\"}}>\n          Actions\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numActions'}\n            defaultValue={model.Model.defaultNumActions}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={20}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numActions = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n    </div>,\n\n\n    <div key={\"examples\"} className={classes.examples} >\n      <Examples/>\n    </div>,\n\n    <div key={\"help\"} className={classes.help} >\n      <Help/>\n    </div>\n\n  ]\n  )\n}\n\n\nexport default GUI;\n","import {Model} from './model.js'\nimport Viewer from './viewer.js'\nimport GUI from './gui';\nimport React, {useRef} from \"react\";\n\n// parse parameter\nconst queryString = window.location.search;\nlet urlParser = new URLSearchParams(queryString);\nwindow.urlParser = urlParser;\nlet initFileName = urlParser.get('load');\nlet initFileDir = \"./examples/\" + initFileName + \".json\";\n\n\n// init Model\nlet model = new Model();\nwindow.model = model;\n\n\n// init sharedData\nconst sharedData = {\n  updateGUI: null,\n  GUIHovered: false,\n  unSelect: false,\n  addingJoint: false,\n  movingJoint: false,\n  movingBody: false,\n  removingJoint: false,\n  showChannel: false,\n  editingScript: false,\n  numActions: 20,\n  numChannels: 4,\n  infoPanel: null,\n  showInfo: false\n};\nmodel.sharedData = sharedData;\nwindow.sharedData = sharedData;\n\nsharedData.infoPanel = document.getElementById('infoPanel');\nif (!sharedData.infoPanel) {\n  sharedData.infoPanel = document.createElement('div');\n  document.body.appendChild(sharedData.infoPanel);\n}\nsharedData.infoPanel.id = 'infoPanel';\nsharedData.infoPanel.style.background = 'rgba(255, 255, 255, 0.9)';\nsharedData.infoPanel.style.position = 'absolute';\nsharedData.infoPanel.style.padding = '10px';\nsharedData.infoPanel.appendChild(sharedData.infoPanel.ownerDocument.createTextNode(\" \"));\n\n\n// events\nwindow.addEventListener('pointerdown', (e)=>{\n  sharedData.unSelect = true;\n}, false);\n\nwindow.addEventListener('pointermove', (e)=>{\n  sharedData.unSelect = false;\n}, false);\n\nwindow.addEventListener('pointerup', (e)=>{\n  if (sharedData.unSelect) {\n    if (!sharedData.GUIHovered) {\n      if (model.vStatus.every(b => b !== 1) && model.eStatus.every(b => b !== 1) && model.fStatus.every(b => b !== 1)) {\n        model.vStatus.fill(0);\n        model.eStatus.fill(0);\n        model.fStatus.fill(0);\n      }\n    }\n\n    if (sharedData.updateGUI) setTimeout(() => {\n      sharedData.updateGUI()\n    }, 10);\n  }\n\n}, false);\n\nwindow.addEventListener('keydown', (e)=>{\n    if (e.code === \"KeyA\" && (e.metaKey || e.ctrlKey)) {\n      model.eStatus.fill(2);\n      model.vStatus.fill(2);\n    }\n\n    if (e.code === \"KeyZ\" && (e.metaKey || e.ctrlKey) && (!e.shiftKey)) {\n      model.undo();\n      setTimeout(()=>{window.updateModel()}, 10);\n    }\n\n    if (e.code === \"KeyZ\" && (e.metaKey || e.ctrlKey) && (e.shiftKey)) {\n      model.redo();\n      setTimeout(()=>{window.updateModel()}, 10);\n    }\n\n    if (e.code === \"KeyA\" && model.editing) {\n      const iJoints = [];\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) iJoints.push(i);\n      }\n      if (iJoints.length !== 1) return;\n      model.addJoint(iJoints[0]);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n      model.resetSelection();\n    }\n\n\n    if (e.code === \"KeyM\" && model.editing) {\n      let val = !sharedData.movingJoint;\n      sharedData.movingJoint = val;\n      if (val) {\n        sharedData.removingJoint = false;\n        sharedData.addingJoint = false;\n      }\n      model.simulate = false;\n      model.resetSelection();\n      window.updateGUI();\n    }\n\n    if (e.code === \"KeyD\" && model.editing) {\n      const iJoints = [];\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) iJoints.push(i);\n      }\n      if (iJoints.length !== 1) return;\n      model.removeJoint(iJoints[0]);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n      model.resetSelection();\n    }\n\n    if (e.code === \"KeyC\" && model.editing) {\n      const iJoints = [];\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) iJoints.push(i);\n      }\n      model.addEdges(iJoints);\n      model.precompute();\n      model.resetSelection();\n      model.forceUpdate();\n    }\n\n    if (e.code === \"KeyT\" && model.editing) {\n      const iJoints = [];\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) iJoints.push(i);\n      }\n      model.addTet(iJoints);\n      model.precompute();\n      model.forceUpdate();\n      model.resetSelection();\n    }\n\n    if (e.code === \"KeyF\") {\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) model.fixedVs[i] = true;\n      }\n      model.forceUpdate();\n    }\n\n    if (e.code === \"KeyU\") {\n      for (let i=0; i<model.v.length; i++) {\n        if (model.vStatus[i] === 2) model.fixedVs[i] = false;\n      }\n      model.forceUpdate();\n    }\n\n    if (e.code === \"KeyE\") {\n      model.editing = !model.editing;\n\n      if (model.editing) {\n        sharedData.editingScript = false;\n        model.simulate = false;\n        model.Model.gravity = false;\n        sharedData.movingJoint = false;\n        sharedData.removingJoint = false;\n        sharedData.addingJoint = false;\n        model.center();\n        for (let i=0; i<model.v.length; i++) {\n          model.vel *= 0;\n        }\n      }\n      if (!model.editing) {\n        sharedData.movingJoint = false;\n        sharedData.removingJoint = false;\n        sharedData.addingJoint = false;\n        model.Model.gravity = true;\n        model.simulate = true;\n      }\n\n      model.controls.current.target = model.centroid();\n\n      window.updateGUI();\n      model.forceUpdate();\n    }\n\n  }\n  , false)\n\n// initial load\nfetch(initFileDir).then(r => r.text()).then(t =>{\n  try {\n    let data = JSON.parse(t);\n    model.loadDict(data);\n    window.data = data;\n    model.loadDict(data);\n    model.simulate = true;\n    model.Model.gravity = true;\n    model.forceUpdate();\n    sharedData.showChannel = true;\n  }\n  catch (e) {\n\n  }\n})\n\n\nfunction Main() {\n  console.log(model);\n  return (\n    [\n      <Viewer key={'viewer'} model={model} sharedData={sharedData}/>,\n      <GUI id={'hehe'} key={'gui'} model={model} sharedData={sharedData}/>\n    ]\n  )\n\n}\n\nexport default Main;","import './style.css';\nimport React, {useRef, useState, useMemo, useReducer} from 'react'\nimport {makeStyles, Grid, List, ListItem, ListItemIcon, ListItemText, Divider,\n        Icon, Slider, Switch, Typography, IconButton}\n        from '@material-ui/core'\nimport {\n  AccessAlarm, Publish, GetApp, ChevronLeft, ExitToApp, Edit, GpsFixed, GpsNotFixed,\n  RadioButtonChecked, RadioButtonUnchecked, FilterCenterFocus, AddCircleOutlineRounded, VerticalAlignCenter,\n  SettingsEthernet, WbSunny, FiberManualRecord, Lock, LockOpen, AddCircleOutline, ChangeHistory, HighlightOff,\n  Link, LinkOff, Visibility, OpenWith, ColorLens, Palette, ArrowDownward, Comment, Computer, HelpOutline, CloudUpload,\n  FormatShapes, SelectAll, ViewColumn, ThreeDRotation, UnfoldMore\n} from \"@material-ui/icons\";\nimport {Circle} from \"@react-three/drei\";\n\nconst cBackground = \"rgba(200, 200, 200, 0.6)\";\nconst cTransparent = \"rgba(200, 200, 200, 0.0)\";\n\nconst cHovered = \"rgba(250, 250, 250, 0.9)\";\nconst cHighlight = \"rgba(250, 100, 50, 0.9)\";\nconst cOff = \"rgba(150, 150, 150, 1)\";\n\nconst cChannels = [\n  \"rgb(100, 150, 220)\",\n  \"rgb(240, 240, 20)\",\n  \"rgb(200, 100, 200)\",\n  \"rgb(100, 200, 130)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n  \"rgb(200, 100, 100)\",\n];\n\nconst widthBlock = 5;   // vh\nconst heightBlock = 5;    // vh\nconst paddingBlock = 1;   // vh\nconst marginBlock = 0.5;     // vh\nconst paddingBlocks = 0.5;\nconst widthSlider = 20;\nconst marginSlider = 0.1;\nconst widthSliders = (widthSlider + marginSlider * 2);\n\n\nconst useStyles = makeStyles((theme) => ({\n  mainGUI: {\n    position: \"absolute\",\n    right: \"1.5vh\",\n    top: \"1.5vh\",\n    width: \"28vh\",\n    height: \"auto\",\n    background: cBackground,\n    \"& .MuiList-root\" : {\n      \"& .MuiListItem-root\" : {\n        minHeight: \"6vh\"\n      }\n    }\n  },\n  editingGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"1.5vh\",\n    width: \"30vh\",\n    // height: \"30vh\",\n    background: cBackground,\n  },\n  scriptGUI: {\n    position: \"absolute\",\n    left: \"2vh\",\n    bottom: \"2vh\",\n    background: cBackground,\n  },\n  editingScriptGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"44vh\",\n    width: \"30vh\",\n    background: cBackground,\n  },\n  help: {\n    position: \"absolute\",\n    cursor: \"pointer\",\n    right: \"10px\",\n    bottom: \"10px\",\n    width: \"40px\",\n    height: \"40px\",\n    alignContent: \"center\",\n    background: cBackground,\n  },\n  examples: {\n    position: \"absolute\",\n    width: \"130px\",\n    right: \"60px\",\n    bottom: \"10px\",\n    height: \"40px\",\n    background: cBackground,\n    cursor: \"pointer\",\n\n  }\n}))\n\nfunction SettingActive({model, updateGUI}) {\n  const icons = [];\n\n  let passive =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === true)\n    ));\n\n  let active =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === false)\n    ));\n\n  icons.push(\n    <Grid item key={\"active\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = true;\n              model.lMax[ie] = model.Model.defaultMaxLength;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <WbSunny/>\n    </IconButton>\n    </Grid>\n  )\n\n  icons.push(\n    <Grid item key={\"passive\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = false;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <FiberManualRecord/>\n    </IconButton>\n    </Grid>\n  )\n\n\n  return (\n    <ListItem>\n      <ListItemText style={{width: \"50%\"}}>\n        Active / Passive\n      </ListItemText>\n      <Grid container style={{width: \"50%\"}}>\n        {icons}\n      </Grid>\n    </ListItem>\n  )\n}\n\nfunction SettingChannel({n, model, updateGUI}) {\n  const icons = [];\n\n  for (let i=0; i<n; i++) {\n    let checked =\n      ![...Array(model.e.length).keys()].every(ie=>(\n        (model.eStatus[ie] !== 2) || ((model.eStatus[ie] === 2) && (model.edgeChannel[ie] !== i))\n      ))\n\n    const color = cChannels[i];\n\n    icons.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}} >\n        <IconButton\n          size={\"small\"}\n          onClick={()=> {\n              for (let ie = 0; ie < model.e.length; ie++) {\n                if (model.eStatus[ie] === 2) {\n                  model.edgeChannel[ie] = i;\n                }\n              }\n              updateGUI();\n\n            }\n          }\n        >\n          {checked? <RadioButtonChecked style={{\"color\": color}}/> :  <RadioButtonUnchecked style={{\"color\": color}}/>}\n        </IconButton>\n      </Grid>\n    )\n  }\n\n  return (\n  <ListItem>\n    <Grid container styles={{width: \"50%\"}}>\n      {icons}\n    </Grid>\n  </ListItem>\n  )\n}\n\nfunction ControlChannel({n, model, updateGUI}) {\n  const switches = [];\n\n  for (let i=0; i<n; i++) {\n    switches.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}}>\n        <Switch\n          size={\"small\"}\n          checked={Boolean(model.inflateChannel[i])}\n          onClick={(e)=>{\n            console.log(e.target.checked);\n            model.inflateChannel[i] = e.target.checked;\n            updateGUI();\n          }}\n        />\n        </Grid>\n    );\n  }\n\n\n  return(\n    <ListItem>\n      <Grid container styles={{width: \"100%\"}} alignItems={\"center\"}>\n        {switches}\n      </Grid>\n    </ListItem>\n  )\n}\n\nconst Examples = () => {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <Grid\n      container\n      style={{\n        height: \"39px\",\n        border: `3px solid ${hovered?cHighlight:cTransparent}`,\n\n      }}\n      onPointerOver={()=>{setHovered(true)}}\n      onPointerOut={()=>{setHovered(false)}}\n      onClick={()=>{window.open('https://climbing-mat-e4b.notion.site/Web-PneuMesh-Examples-23cc48c3172849cc95b53ba68cc9d251','_blank').focus()}}\n    >\n      <Grid\n        container\n        xs={4}\n        alignItems={\"center\"}\n      >\n\n        <ExitToApp\n          style={{height: \"30px\", width: \"30px\"}}\n        />\n      </Grid>\n\n      <Grid\n        container\n        xs={8}\n        alignItems={\"center\"}\n      >\n        <div>Examples</div>\n      </Grid>\n\n    </Grid>\n  )\n}\n\n\nconst Help = () => {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <Grid\n      style={{\n        height: \"30px\",\n        width: \"30px\",\n        border: `3px solid ${hovered?cHighlight:cTransparent}`,\n        padding: \"2px\",\n      }}\n      onPointerOver={()=>{setHovered(true)}}\n      onPointerOut={()=>{setHovered(false)}}\n      onClick={()=>{window.open('https://climbing-mat-e4b.notion.site/Web-PneuMesh-Tutorial-e1182476d3d34b85b9619df3419c7c40','_blank').focus()}}\n    >\n      <HelpOutline\n        style={{height: \"30px\", width: \"30px\"}}\n      />\n    </Grid>\n  )\n}\n\nfunction TemporalControl({model, sharedData, updateGUI, classes}) {\n  model.precompute();\n  const widthBlocks = (widthBlock + marginBlock * 2) * model.numActions + paddingBlocks * 2;\n\n  const Block = ({model, iChannel, iAction}) => {\n    const [hovered, setHovered] = useState(false);\n    const isOn = model.script[iChannel][iAction];\n    const [actuating, setActuating] = useState(iAction===model.iAction);\n\n    return (\n      <Grid item\n            key={iAction}\n            className={classes.scriptBlock}\n            style={{\n              cursor: \"pointer\",\n              background: cChannels[iChannel],\n              width: `${widthBlock}vh`,\n              height: `${heightBlock}vh`,\n              padding: `${paddingBlock}vh`,\n              margin: `${marginBlock}vh`,\n              border: `${hovered?\"4px\":\"2px\"} solid ${model.iAction===iAction?cHighlight:cHovered}`,\n              opacity: `${isOn?1:hovered?0.8:0.1}`\n            }}\n            onPointerOver={()=>{setHovered(true)}}\n            onPointerOut={()=>{setHovered(false)}}\n            onClick={()=>{model.script[iChannel][iAction]=!isOn}}\n      >\n      </Grid>\n    )\n  }\n\n  const Row = ({model, iChannel}) => {\n    const blocks = [];\n    for (let iAction=0; iAction<model.numActions; iAction++) {\n      const isOn=true;\n      blocks.push(\n        <Block key={iAction} model={model} isOn={isOn} iChannel={iChannel} iAction={iAction} />\n      );\n    }\n\n    return(\n      <Grid container item spacing={0}>\n        {/*<React.Fragment>*/}\n          {blocks}\n        {/*</React.Fragment>*/}\n      </Grid>\n    )\n  }\n\n  const rows = [];\n  for (let iChannel=0; iChannel<model.numChannels; iChannel++) {\n    rows.push(<Row key={iChannel} iChannel={iChannel} model={model}/>)\n  }\n\n  return ([\n    <Grid key={'buttons'} container item spacing={0} style={{padding:`${paddingBlocks}vh`, width: `${widthBlocks}vh`}}>\n      {rows}\n    </Grid>,\n\n    ]\n  );\n}\n\n\nfunction GUI({model, options, sharedData}) {\n\n  const [, updateGUI] = useReducer(x => x+1, 0);\n  sharedData.updateGUI = updateGUI;\n  window.updateGUI = updateGUI;\n  model.recordHistory();\n\n  const classes = useStyles();\n\n  const load = (e)=>{\n    let input = document.createElement('input');\n    document.body.appendChild(input);\n    input.type = 'file';\n    input.id = 'inputFile';\n    input.style = 'display:none';\n\n    document.getElementById(\"inputFile\").click();\n    document.getElementById(\"inputFile\").onchange = ()=>{\n\n      let reader = new FileReader();\n      reader.onload = (event) => {\n        let inputFileString = event.target.result;\n        window.inputFileString = inputFileString;\n        let data = JSON.parse(inputFileString);\n        window.data =data;\n        model.loadDict(data);\n        model.simulate=false;\n        model.Model.gravity=true;\n        model.forceUpdate();\n        updateGUI();\n      };\n      reader.readAsText(document.getElementById(\"inputFile\").files[0]);\n      document.body.removeChild(input);\n    };\n  }\n\n  const save = (e)=>{\n    model.recordV();\n\n    let data = model.saveData();\n    let json = JSON.stringify(data);\n\n    let download = document.createElement('a');\n    document.body.appendChild(download);\n    download.download = 'download.json';\n    download.style.display = 'none';\n    download.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(json);\n    download.click();\n    document.body.removeChild(download);\n  }\n\n  return (\n    [\n    <div key={\"mainGUI\"} className={classes.mainGUI}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <CloudUpload/>\n          </ListItemIcon>\n          <ListItemText>\n            Upload Material\n          </ListItemText>\n        </ListItem>\n\n\n        <Divider/>\n        <Divider/>\n\n\n        <ListItem button>\n          <ListItemIcon>\n            <FormatShapes/>\n          </ListItemIcon>\n          <ListItemText>\n            Draw Outline\n          </ListItemText>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsEthernet/>\n          </ListItemIcon>\n          <ListItemText>\n            Crop Region\n          </ListItemText>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem button>\n          <ListItemIcon>\n            <SelectAll/>\n          </ListItemIcon>\n          <ListItemText>\n            Select Region\n          </ListItemText>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem>\n          <ListItemIcon>\n            <ViewColumn/>\n          </ListItemIcon>\n          <Typography style={{width: \"50%\"}}>\n            Gap Size\n          </Typography>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem>\n          <Slider\n            style={{width: \"50%\"}}\n            disabled={false\n            }\n            defaultValue={model.Model.maxMaxContraction}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={model.Model.contractionInterval}\n            min={0}\n            max={model.Model.maxMaxContraction}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              for (let i=0; i<model.e.length; i++) {\n                if (model.eStatus[i] === 2) {\n                  model.maxContraction[i] = val;\n                }\n              }\n            }}\n            onPointerUp={()=>{model.forceUpdate();}}\n          />\n        </ListItem>\n\n        <Divider/>\n        <Divider/>\n\n        <ListItem>\n          <ListItemIcon>\n            <ThreeDRotation/>\n          </ListItemIcon>\n          <Typography style={{width: \"50%\"}}>\n            Load 3D Geometry\n          </Typography>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem>\n          <ListItemIcon>\n            <UnfoldMore/>\n          </ListItemIcon>\n          <Typography style={{width: \"50%\"}}>\n            Adjust Geometry\n          </Typography>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem>\n          <ListItemIcon>\n            <ArrowDownward/>\n          </ListItemIcon>\n          <Typography style={{width: \"50%\"}}>\n            Flatten\n          </Typography>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem>\n          <ListItemIcon>\n            <ExitToApp/>\n          </ListItemIcon>\n          <Typography style={{width: \"50%\"}}>\n            Export\n          </Typography>\n        </ListItem>\n\n      </List>\n    </div>,\n\n\n    <div key={\"editingGUI\"} className={classes.editingGUI}\n         style={model.editing ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n        <List>\n          {/*<ListItem>*/}\n          {/*  <ListItemText>*/}\n          {/*    Add Joint*/}\n          {/*  </ListItemText>*/}\n          {/*  <Switch*/}\n          {/*    key={\"add_joint\"}*/}\n          {/*    checked={sharedData.addingJoint}*/}\n          {/*    onChange={(e,val)=>{*/}\n          {/*      sharedData.addingJoint = val;*/}\n          {/*      if (val) {*/}\n          {/*        sharedData.removingJoint = false;*/}\n          {/*        sharedData.movingJoint = false;*/}\n          {/*      }*/}\n          {/*      updateGUI();*/}\n          {/*    }}*/}\n          {/*  />*/}\n          {/*</ListItem>*/}\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      if (iJoints.length !== 1) return;\n                      model.addJoint(iJoints[0]);\n                      model.precompute();\n                      model.recordV();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <AddCircleOutline />\n            </ListItemIcon>\n            <ListItemText>\n              Add Joint (A)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      model.addEdges(iJoints);\n                      model.precompute();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <Link />\n            </ListItemIcon>\n            <ListItemText>\n              Connect Joints (C)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      model.addTet(iJoints);\n                      model.precompute();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <ChangeHistory />\n            </ListItemIcon>\n            <ListItemText>\n              Add Tet (T)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      if (iJoints.length !== 1) return;\n                      model.removeJoint(iJoints[0]);\n                      model.precompute();\n                      model.recordV();\n                      model.forceUpdate();\n                      model.resetSelection();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <HighlightOff />\n            </ListItemIcon>\n            <ListItemText>\n              Remove Joint (D)\n            </ListItemText>\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <OpenWith />\n            </ListItemIcon>\n            <ListItemText>\n              Move Joint (M)\n            </ListItemText>\n            <Switch\n              key={\"add_joint\"}\n              checked={sharedData.movingJoint}\n              onChange={(e,val)=>{\n                sharedData.movingJoint = val;\n                if (val) {\n                  sharedData.removingJoint = false;\n                  sharedData.addingJoint = false;\n                }\n                model.simulate = false;\n                model.resetSelection();\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Move Body\n            </ListItemText>\n            <Switch\n              disabled={!sharedData.movingJoint}\n              key={\"add_joint\"}\n              checked={sharedData.movingBody}\n              onChange={(e,val)=>{\n                sharedData.movingBody = val;\n                // model.resetSelection();\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n\n          {/*<ListItem>*/}\n          {/*  <ListItemText>*/}\n          {/*    Remove Joint*/}\n          {/*  </ListItemText>*/}\n          {/*  <Switch*/}\n          {/*    key={\"remove_joint\"}*/}\n          {/*    checked={sharedData.removingJoint}*/}\n          {/*    onChange={(e,val)=>{*/}\n          {/*      sharedData.removingJoint = val;*/}\n          {/*      if (val) {*/}\n          {/*        sharedData.addingJoint = false;*/}\n          {/*        sharedData.movingJoint = false;*/}\n          {/*      }*/}\n          {/*      updateGUI();*/}\n          {/*    }}*/}\n          {/*  />*/}\n          {/*</ListItem>*/}\n\n\n          <Divider/>\n\n          <ListItem>\n            <ListItemText>\n              X:\n            </ListItemText>\n            <Slider\n              key={\"sliderX\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(val, model.euler.y, model.euler.z);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText>\n              Y:\n            </ListItemText>\n            <Slider\n              key={\"sliderY\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(model.euler.x, val, model.euler.z);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              Z:\n            </ListItemText>\n            <Slider\n              key={\"sliderZ\"}\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI}\n              max={Math.PI}\n              valueLabelDisplay={\"auto\"}\n              onMouseDown={(e)=>{\n                // model.center();\n                // model.Model.gravity = false;\n              }}\n              onMouseUp={(e)=>{\n                // model.center();\n                // model.Model.gravity = true;\n              }}\n              onChange={(e, val)=>{\n                model.rotateTo(model.euler.x, model.euler.y, val);\n                // model.resetV();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem button\n                    onClick={(e)=>{\n                      model.numSteps = 0;\n                      model.simulate = false;\n                      model.v = model.v0;\n                      model.center();\n                      model.precompute();\n                      model.forceUpdate();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <FilterCenterFocus />\n            </ListItemIcon>\n            <ListItemText>\n              Center Model\n            </ListItemText>\n          </ListItem>\n\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            model.recordV();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <SettingsEthernet />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Record V*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            const iJointsSelected = [];*/}\n          {/*            for (let i=0; i<model.v.length; i++) {*/}\n          {/*              if (model.vStatus[i] === 2) iJointsSelected.push(i);*/}\n          {/*            }*/}\n\n          {/*            model.align(true, iJointsSelected);*/}\n          {/*            model.forceUpdate();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <VerticalAlignCenter />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Align with X-axis*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n          {/*<ListItem button*/}\n          {/*          onClick={(e)=>{*/}\n          {/*            // model.resetV();*/}\n          {/*            model.forceUpdate();*/}\n          {/*          }}>*/}\n          {/*  <ListItemIcon>*/}\n          {/*    <SettingsEthernet />*/}\n          {/*  </ListItemIcon>*/}\n          {/*  <ListItemText>*/}\n          {/*    Reset*/}\n          {/*  </ListItemText>*/}\n          {/*</ListItem>*/}\n\n        </List>\n\n\n    </div>,\n\n    <div key={\"scriptGUI\"} className={classes.scriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"block\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <TemporalControl model={model} sharedData={sharedData} classes={classes} updateGUI={updateGUI}/>\n    </div>,\n\n\n    <div key={\"editingScriptGUI\"} className={classes.editingScriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n\n      <Grid key={'numChannels'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`, width: \"10vh\", fontSize:\"small\"}}>\n          Channels\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numChannels'}\n            defaultValue={model.Model.defaultNumChannels}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={5}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numChannels = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid key={'numActions'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`,  width: \"10vh\", fontSize:\"small\"}}>\n          Actions\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numActions'}\n            defaultValue={model.Model.defaultNumActions}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={20}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numActions = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n    </div>,\n\n\n    <div key={\"examples\"} className={classes.examples} >\n      <Examples/>\n    </div>,\n\n    <div key={\"help\"} className={classes.help} >\n      <Help/>\n    </div>\n\n  ]\n  )\n}\n\n\nexport default GUI;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport GUI from './guiBend';\nimport reportWebVitals from './reportWebVitals';\n\nlet root = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  root\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}